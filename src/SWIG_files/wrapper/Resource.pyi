from enum import IntEnum
from typing import overload, NewType, Optional, Tuple

from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.TCollection import *


class Resource_FormatType(IntEnum):
	Resource_FormatType_SJIS: int = ...
	Resource_FormatType_EUC: int = ...
	Resource_FormatType_ANSI: int = ...
	Resource_FormatType_GB: int = ...
	Resource_FormatType_UTF8: int = ...
	Resource_FormatType_SystemLocale: int = ...
	Resource_SJIS: int = ...
	Resource_EUC: int = ...
	Resource_ANSI: int = ...
	Resource_GB: int = ...
Resource_FormatType_SJIS = Resource_FormatType.Resource_FormatType_SJIS
Resource_FormatType_EUC = Resource_FormatType.Resource_FormatType_EUC
Resource_FormatType_ANSI = Resource_FormatType.Resource_FormatType_ANSI
Resource_FormatType_GB = Resource_FormatType.Resource_FormatType_GB
Resource_FormatType_UTF8 = Resource_FormatType.Resource_FormatType_UTF8
Resource_FormatType_SystemLocale = Resource_FormatType.Resource_FormatType_SystemLocale
Resource_SJIS = Resource_FormatType.Resource_SJIS
Resource_EUC = Resource_FormatType.Resource_EUC
Resource_ANSI = Resource_FormatType.Resource_ANSI
Resource_GB = Resource_FormatType.Resource_GB

class Resource_LexicalCompare:
	def __init__(self) -> None: ...
	def IsLower(self, Left: TCollection_AsciiString, Right: TCollection_AsciiString) -> bool: ...

class Resource_Manager(Standard_Transient):
	@overload
	def __init__(self, aName: str, Verbose: Optional[bool]) -> None: ...
	@overload
	def __init__(self, aName: str, aDefaultsDirectory: TCollection_AsciiString, anUserDefaultsDirectory: TCollection_AsciiString, Verbose: Optional[bool]) -> None: ...
	def ExtValue(self, aResourceName: str) -> Standard_ExtString: ...
	def Find(self, aResource: str) -> bool: ...
	@staticmethod
	def GetResourcePath(self, aPath: TCollection_AsciiString, aName: str, isUserDefaults: bool) -> None: ...
	def Integer(self, aResourceName: str) -> int: ...
	def Real(self, aResourceName: str) -> float: ...
	def Save(self) -> bool: ...
	def SetResource(self, aResourceName: str, aValue: int) -> None: ...
	def SetResource(self, aResourceName: str, aValue: float) -> None: ...
	def SetResource(self, aResourceName: str, aValue: str) -> None: ...
	def SetResource(self, aResourceName: str, aValue: Standard_ExtString) -> None: ...
	def Value(self, aResourceName: str) -> str: ...

class Resource_Unicode:
	@staticmethod
	def ConvertANSIToUnicode(self, fromstr: str, tostr: TCollection_ExtendedString) -> None: ...
	@staticmethod
	def ConvertBig5ToUnicode(self, fromstr: str, tostr: TCollection_ExtendedString) -> bool: ...
	@staticmethod
	def ConvertEUCToUnicode(self, fromstr: str, tostr: TCollection_ExtendedString) -> None: ...
	@staticmethod
	def ConvertFormatToUnicode(self, theFromStr: str, theToStr: TCollection_ExtendedString) -> None: ...
	@staticmethod
	def ConvertFormatToUnicode(self, theFormat: Resource_FormatType, theFromStr: str, theToStr: TCollection_ExtendedString) -> None: ...
	@staticmethod
	def ConvertGBKToUnicode(self, fromstr: str, tostr: TCollection_ExtendedString) -> bool: ...
	@staticmethod
	def ConvertGBToUnicode(self, fromstr: str, tostr: TCollection_ExtendedString) -> None: ...
	@staticmethod
	def ConvertSJISToUnicode(self, fromstr: str, tostr: TCollection_ExtendedString) -> None: ...
	@staticmethod
	def ConvertUnicodeToANSI(self, fromstr: TCollection_ExtendedString, tostr: Standard_PCharacter, maxsize: int) -> bool: ...
	@staticmethod
	def ConvertUnicodeToEUC(self, fromstr: TCollection_ExtendedString, tostr: Standard_PCharacter, maxsize: int) -> bool: ...
	@staticmethod
	def ConvertUnicodeToFormat(self, theFormat: Resource_FormatType, theFromStr: TCollection_ExtendedString, theToStr: Standard_PCharacter, theMaxSize: int) -> bool: ...
	@staticmethod
	def ConvertUnicodeToFormat(self, theFromStr: TCollection_ExtendedString, theToStr: Standard_PCharacter, theMaxSize: int) -> bool: ...
	@staticmethod
	def ConvertUnicodeToGB(self, fromstr: TCollection_ExtendedString, tostr: Standard_PCharacter, maxsize: int) -> bool: ...
	@staticmethod
	def ConvertUnicodeToSJIS(self, fromstr: TCollection_ExtendedString, tostr: Standard_PCharacter, maxsize: int) -> bool: ...
	@staticmethod
	def GetFormat(self) -> Resource_FormatType: ...
	@staticmethod
	def ReadFormat(self) -> None: ...
	@staticmethod
	def SetFormat(self, typecode: Resource_FormatType) -> None: ...
