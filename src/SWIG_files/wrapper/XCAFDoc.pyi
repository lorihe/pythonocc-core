from enum import IntEnum
from typing import overload, NewType, Optional, Tuple

from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.TCollection import *
from OCC.Core.TDF import *
from OCC.Core.TColStd import *
from OCC.Core.gp import *
from OCC.Core.Quantity import *
from OCC.Core.TopoDS import *
from OCC.Core.XCAFDimTolObjects import *
from OCC.Core.TDocStd import *
from OCC.Core.TopLoc import *
from OCC.Core.XCAFNoteObjects import *
from OCC.Core.OSD import *
from OCC.Core.TopTools import *
from OCC.Core.TDataStd import *
from OCC.Core.XCAFView import *

XCAFDoc_PartId = NewType('XCAFDoc_PartId', TCollection_AsciiString)

class XCAFDoc_ColorType(IntEnum):
	XCAFDoc_ColorGen: int = ...
	XCAFDoc_ColorSurf: int = ...
	XCAFDoc_ColorCurv: int = ...
XCAFDoc_ColorGen = XCAFDoc_ColorType.XCAFDoc_ColorGen
XCAFDoc_ColorSurf = XCAFDoc_ColorType.XCAFDoc_ColorSurf
XCAFDoc_ColorCurv = XCAFDoc_ColorType.XCAFDoc_ColorCurv

class XCAFDoc:
	@staticmethod
	def AssemblyGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ColorByLayerGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ColorRefGUID(self, type: XCAFDoc_ColorType) -> Standard_GUID: ...
	@staticmethod
	def DatumRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def DatumTolRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def DimTolRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def DimensionRefFirstGUID(self) -> Standard_GUID: ...
	@staticmethod
	def DimensionRefSecondGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ExternRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def GeomToleranceRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def InvisibleGUID(self) -> Standard_GUID: ...
	@staticmethod
	def LayerRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def LockGUID(self) -> Standard_GUID: ...
	@staticmethod
	def MaterialRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def NoteRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def SHUORefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ShapeRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ViewRefAnnotationGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ViewRefGDTGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ViewRefGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ViewRefNoteGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ViewRefPlaneGUID(self) -> Standard_GUID: ...
	@staticmethod
	def ViewRefShapeGUID(self) -> Standard_GUID: ...

class XCAFDoc_Area(TDF_Attribute):
	def __init__(self) -> None: ...
	def Get(self) -> float: ...
	@staticmethod
	def Get(self, label: TDF_Label) -> Tuple[bool, float]: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	def Set(self, vol: float) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, area: float) -> XCAFDoc_Area: ...

class XCAFDoc_AssemblyItemId:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, thePath: TColStd_ListOfAsciiString) -> None: ...
	@overload
	def __init__(self, theString: TCollection_AsciiString) -> None: ...
	def GetPath(self) -> TColStd_ListOfAsciiString: ...
	def Init(self, thePath: TColStd_ListOfAsciiString) -> None: ...
	def Init(self, theString: TCollection_AsciiString) -> None: ...
	def IsChild(self, theOther: XCAFDoc_AssemblyItemId) -> bool: ...
	def IsDirectChild(self, theOther: XCAFDoc_AssemblyItemId) -> bool: ...
	def IsEqual(self, theOther: XCAFDoc_AssemblyItemId) -> bool: ...
	def IsNull(self) -> bool: ...
	def Nullify(self) -> None: ...
	def ToString(self) -> TCollection_AsciiString: ...

class XCAFDoc_AssemblyItemRef(TDF_Attribute):
	def __init__(self) -> None: ...
	def ClearExtraRef(self) -> None: ...
	@staticmethod
	def Get(self, theLabel: TDF_Label) -> XCAFDoc_AssemblyItemRef: ...
	def GetGUID(self) -> Standard_GUID: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetItem(self) -> XCAFDoc_AssemblyItemId: ...
	def GetSubshapeIndex(self) -> int: ...
	def HasExtraRef(self) -> bool: ...
	def ID(self) -> Standard_GUID: ...
	def IsGUID(self) -> bool: ...
	def IsOrphan(self) -> bool: ...
	def IsSubshapeIndex(self) -> bool: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, theAttrInto: TDF_Attribute, theRT: TDF_RelocationTable) -> None: ...
	def Restore(self, theAttrFrom: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId) -> XCAFDoc_AssemblyItemRef: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theGUID: Standard_GUID) -> XCAFDoc_AssemblyItemRef: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theShapeIndex: int) -> XCAFDoc_AssemblyItemRef: ...
	def SetGUID(self, theAttrGUID: Standard_GUID) -> None: ...
	def SetItem(self, theItemId: XCAFDoc_AssemblyItemId) -> None: ...
	def SetItem(self, thePath: TColStd_ListOfAsciiString) -> None: ...
	def SetItem(self, theString: TCollection_AsciiString) -> None: ...
	def SetSubshapeIndex(self, theShapeIndex: int) -> None: ...

class XCAFDoc_Centroid(TDF_Attribute):
	def __init__(self) -> None: ...
	def Get(self) -> gp_Pnt: ...
	@staticmethod
	def Get(self, label: TDF_Label, pnt: gp_Pnt) -> bool: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, pnt: gp_Pnt) -> XCAFDoc_Centroid: ...
	def Set(self, pnt: gp_Pnt) -> None: ...

class XCAFDoc_ClippingPlaneTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddClippingPlane(self, thePlane: gp_Pln, theName: TCollection_ExtendedString, theCapping: bool) -> TDF_Label: ...
	def AddClippingPlane(self, thePlane: gp_Pln, theName: TCollection_HAsciiString, theCapping: bool) -> TDF_Label: ...
	def AddClippingPlane(self, thePlane: gp_Pln, theName: TCollection_ExtendedString) -> TDF_Label: ...
	def AddClippingPlane(self, thePlane: gp_Pln, theName: TCollection_HAsciiString) -> TDF_Label: ...
	def BaseLabel(self) -> TDF_Label: ...
	def GetCapping(self, theClippingPlaneL: TDF_Label) -> bool: ...
	def GetCapping(self, theClippingPlaneL: TDF_Label) -> Tuple[bool, bool]: ...
	def GetClippingPlane(self, theLabel: TDF_Label, thePlane: gp_Pln, theName: TCollection_ExtendedString) -> Tuple[bool, bool]: ...
	def GetClippingPlane(self, theLabel: TDF_Label, thePlane: gp_Pln, theName: TCollection_HAsciiString) -> Tuple[bool, bool]: ...
	def GetClippingPlanes(self, Labels: TDF_LabelSequence) -> None: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def IsClippingPlane(self, theLabel: TDF_Label) -> bool: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def RemoveClippingPlane(self, theLabel: TDF_Label) -> bool: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label) -> XCAFDoc_ClippingPlaneTool: ...
	def SetCapping(self, theClippingPlaneL: TDF_Label, theCapping: bool) -> None: ...
	def UpdateClippingPlane(self, theLabelL: TDF_Label, thePlane: gp_Pln, theName: TCollection_ExtendedString) -> None: ...

class XCAFDoc_Color(TDF_Attribute):
	def __init__(self) -> None: ...
	def GetAlpha(self) -> Standard_ShortReal: ...
	def GetColor(self) -> Quantity_Color: ...
	def GetColorRGBA(self) -> Quantity_ColorRGBA: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetNOC(self) -> Quantity_NameOfColor: ...
	def GetRGB(self) -> Tuple[float, float, float]: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, C: Quantity_Color) -> XCAFDoc_Color: ...
	@staticmethod
	def Set(self, label: TDF_Label, C: Quantity_ColorRGBA) -> XCAFDoc_Color: ...
	@staticmethod
	def Set(self, label: TDF_Label, C: Quantity_NameOfColor) -> XCAFDoc_Color: ...
	@staticmethod
	def Set(self, label: TDF_Label, R: float, G: float, B: float, alpha: Optional[float]) -> XCAFDoc_Color: ...
	def Set(self, C: Quantity_Color) -> None: ...
	def Set(self, C: Quantity_ColorRGBA) -> None: ...
	def Set(self, C: Quantity_NameOfColor) -> None: ...
	def Set(self, R: float, G: float, B: float, alpha: Optional[float]) -> None: ...

class XCAFDoc_ColorTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddColor(self, col: Quantity_Color) -> TDF_Label: ...
	def AddColor(self, col: Quantity_ColorRGBA) -> TDF_Label: ...
	def BaseLabel(self) -> TDF_Label: ...
	def FindColor(self, col: Quantity_Color, lab: TDF_Label) -> bool: ...
	def FindColor(self, col: Quantity_ColorRGBA, lab: TDF_Label) -> bool: ...
	def FindColor(self, col: Quantity_Color) -> TDF_Label: ...
	def FindColor(self, col: Quantity_ColorRGBA) -> TDF_Label: ...
	def GetColor(self, lab: TDF_Label, col: Quantity_Color) -> bool: ...
	def GetColor(self, lab: TDF_Label, col: Quantity_ColorRGBA) -> bool: ...
	@staticmethod
	def GetColor(self, L: TDF_Label, type: XCAFDoc_ColorType, colorL: TDF_Label) -> bool: ...
	def GetColor(self, L: TDF_Label, type: XCAFDoc_ColorType, color: Quantity_Color) -> bool: ...
	def GetColor(self, L: TDF_Label, type: XCAFDoc_ColorType, color: Quantity_ColorRGBA) -> bool: ...
	def GetColor(self, S: TopoDS_Shape, type: XCAFDoc_ColorType, colorL: TDF_Label) -> bool: ...
	def GetColor(self, S: TopoDS_Shape, type: XCAFDoc_ColorType, color: Quantity_Color) -> bool: ...
	def GetColor(self, S: TopoDS_Shape, type: XCAFDoc_ColorType, color: Quantity_ColorRGBA) -> bool: ...
	def GetColors(self, Labels: TDF_LabelSequence) -> None: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetInstanceColor(self, theShape: TopoDS_Shape, type: XCAFDoc_ColorType, color: Quantity_Color) -> bool: ...
	def GetInstanceColor(self, theShape: TopoDS_Shape, type: XCAFDoc_ColorType, color: Quantity_ColorRGBA) -> bool: ...
	def ID(self) -> Standard_GUID: ...
	def IsColor(self, lab: TDF_Label) -> bool: ...
	def IsColorByLayer(self, L: TDF_Label) -> bool: ...
	def IsInstanceVisible(self, theShape: TopoDS_Shape) -> bool: ...
	def IsSet(self, L: TDF_Label, type: XCAFDoc_ColorType) -> bool: ...
	def IsSet(self, S: TopoDS_Shape, type: XCAFDoc_ColorType) -> bool: ...
	def IsVisible(self, L: TDF_Label) -> bool: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def RemoveColor(self, lab: TDF_Label) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	def ReverseChainsOfTreeNodes(self) -> bool: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_ColorTool: ...
	def SetColor(self, L: TDF_Label, colorL: TDF_Label, type: XCAFDoc_ColorType) -> None: ...
	def SetColor(self, L: TDF_Label, Color: Quantity_Color, type: XCAFDoc_ColorType) -> None: ...
	def SetColor(self, L: TDF_Label, Color: Quantity_ColorRGBA, type: XCAFDoc_ColorType) -> None: ...
	def SetColor(self, S: TopoDS_Shape, colorL: TDF_Label, type: XCAFDoc_ColorType) -> bool: ...
	def SetColor(self, S: TopoDS_Shape, Color: Quantity_Color, type: XCAFDoc_ColorType) -> bool: ...
	def SetColor(self, S: TopoDS_Shape, Color: Quantity_ColorRGBA, type: XCAFDoc_ColorType) -> bool: ...
	def SetColorByLayer(self, shapeLabel: TDF_Label, isColorByLayer: Optional[bool]) -> None: ...
	def SetInstanceColor(self, theShape: TopoDS_Shape, type: XCAFDoc_ColorType, color: Quantity_Color, isCreateSHUO: Optional[bool]) -> bool: ...
	def SetInstanceColor(self, theShape: TopoDS_Shape, type: XCAFDoc_ColorType, color: Quantity_ColorRGBA, isCreateSHUO: Optional[bool]) -> bool: ...
	def SetVisibility(self, shapeLabel: TDF_Label, isvisible: Optional[bool]) -> None: ...
	def ShapeTool(self) -> XCAFDoc_ShapeTool: ...
	def UnSetColor(self, L: TDF_Label, type: XCAFDoc_ColorType) -> None: ...
	def UnSetColor(self, S: TopoDS_Shape, type: XCAFDoc_ColorType) -> bool: ...

class XCAFDoc_Datum(TDF_Attribute):
	def __init__(self) -> None: ...
	def GetDescription(self) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetIdentification(self) -> TCollection_HAsciiString: ...
	def GetName(self) -> TCollection_HAsciiString: ...
	def GetObject(self) -> XCAFDimTolObjects_DatumObject: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, anIdentification: TCollection_HAsciiString) -> XCAFDoc_Datum: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label) -> XCAFDoc_Datum: ...
	def Set(self, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, anIdentification: TCollection_HAsciiString) -> None: ...
	def SetObject(self, theDatumObject: XCAFDimTolObjects_DatumObject) -> None: ...

class XCAFDoc_DimTol(TDF_Attribute):
	def __init__(self) -> None: ...
	def GetDescription(self) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetKind(self) -> int: ...
	def GetName(self) -> TCollection_HAsciiString: ...
	def GetVal(self) -> TColStd_HArray1OfReal: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, kind: int, aVal: TColStd_HArray1OfReal, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString) -> XCAFDoc_DimTol: ...
	def Set(self, kind: int, aVal: TColStd_HArray1OfReal, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString) -> None: ...

class XCAFDoc_Dimension(TDF_Attribute):
	def __init__(self) -> None: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetObject(self) -> XCAFDimTolObjects_DimensionObject: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label) -> XCAFDoc_Dimension: ...
	def SetObject(self, theDimensionObject: XCAFDimTolObjects_DimensionObject) -> None: ...

class XCAFDoc_DocumentTool(TDF_Attribute):
	def __init__(self) -> None: ...
	@staticmethod
	def ClippingPlaneTool(self, acces: TDF_Label) -> XCAFDoc_ClippingPlaneTool: ...
	@staticmethod
	def ClippingPlanesLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def ColorTool(self, acces: TDF_Label) -> XCAFDoc_ColorTool: ...
	@staticmethod
	def ColorsLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def DGTsLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def DimTolTool(self, acces: TDF_Label) -> XCAFDoc_DimTolTool: ...
	@staticmethod
	def DocLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def Init(self) -> None: ...
	@staticmethod
	def IsXCAFDocument(self, Doc: TDocStd_Document) -> bool: ...
	@staticmethod
	def LayerTool(self, acces: TDF_Label) -> XCAFDoc_LayerTool: ...
	@staticmethod
	def LayersLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def MaterialTool(self, acces: TDF_Label) -> XCAFDoc_MaterialTool: ...
	@staticmethod
	def MaterialsLabel(self, acces: TDF_Label) -> TDF_Label: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	@staticmethod
	def NotesLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def NotesTool(self, acces: TDF_Label) -> XCAFDoc_NotesTool: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, L: TDF_Label, IsAcces: Optional[bool]) -> XCAFDoc_DocumentTool: ...
	@staticmethod
	def ShapeTool(self, acces: TDF_Label) -> XCAFDoc_ShapeTool: ...
	@staticmethod
	def ShapesLabel(self, acces: TDF_Label) -> TDF_Label: ...
	@staticmethod
	def ViewTool(self, acces: TDF_Label) -> XCAFDoc_ViewTool: ...
	@staticmethod
	def ViewsLabel(self, acces: TDF_Label) -> TDF_Label: ...

class XCAFDoc_Editor:
	@staticmethod
	def Expand(self, Doc: TDF_Label, Shape: TDF_Label, recursively: Optional[bool]) -> bool: ...
	@staticmethod
	def Expand(self, Doc: TDF_Label, recursively: Optional[bool]) -> bool: ...

class XCAFDoc_GraphNode(TDF_Attribute):
	def __init__(self) -> None: ...
	def BeforeForget(self) -> None: ...
	def ChildIndex(self, Ch: XCAFDoc_GraphNode) -> int: ...
	def FatherIndex(self, F: XCAFDoc_GraphNode) -> int: ...
	@staticmethod
	def Find(self, L: TDF_Label, G: XCAFDoc_GraphNode) -> bool: ...
	def GetChild(self, Chindex: int) -> XCAFDoc_GraphNode: ...
	@staticmethod
	def GetDefaultGraphID(self) -> Standard_GUID: ...
	def GetFather(self, Findex: int) -> XCAFDoc_GraphNode: ...
	def ID(self) -> Standard_GUID: ...
	def IsChild(self, F: XCAFDoc_GraphNode) -> bool: ...
	def IsFather(self, Ch: XCAFDoc_GraphNode) -> bool: ...
	def NbChildren(self) -> int: ...
	def NbFathers(self) -> int: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def References(self, aDataSet: TDF_DataSet) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_GraphNode: ...
	@staticmethod
	def Set(self, L: TDF_Label, ExplicitGraphID: Standard_GUID) -> XCAFDoc_GraphNode: ...
	def SetChild(self, Ch: XCAFDoc_GraphNode) -> int: ...
	def SetFather(self, F: XCAFDoc_GraphNode) -> int: ...
	def SetGraphID(self, explicitID: Standard_GUID) -> None: ...
	def UnSetChild(self, Ch: XCAFDoc_GraphNode) -> None: ...
	def UnSetChild(self, Chindex: int) -> None: ...
	def UnSetFather(self, F: XCAFDoc_GraphNode) -> None: ...
	def UnSetFather(self, Findex: int) -> None: ...

class XCAFDoc_LayerTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddLayer(self, aLayer: TCollection_ExtendedString) -> TDF_Label: ...
	def BaseLabel(self) -> TDF_Label: ...
	def FindLayer(self, aLayer: TCollection_ExtendedString, lab: TDF_Label) -> bool: ...
	def FindLayer(self, aLayer: TCollection_ExtendedString) -> TDF_Label: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetLayer(self, lab: TDF_Label, aLayer: TCollection_ExtendedString) -> bool: ...
	def GetLayerLabels(self, Labels: TDF_LabelSequence) -> None: ...
	def GetLayers(self, L: TDF_Label, aLayerS: TColStd_HSequenceOfExtendedString) -> bool: ...
	def GetLayers(self, L: TDF_Label, aLayerLS: TDF_LabelSequence) -> bool: ...
	def GetLayers(self, L: TDF_Label) -> TColStd_HSequenceOfExtendedString: ...
	def GetLayers(self, Sh: TopoDS_Shape, aLayerS: TColStd_HSequenceOfExtendedString) -> bool: ...
	def GetLayers(self, Sh: TopoDS_Shape, aLayerLS: TDF_LabelSequence) -> bool: ...
	def GetLayers(self, Sh: TopoDS_Shape) -> TColStd_HSequenceOfExtendedString: ...
	def GetShapesOfLayer(self, layerL: TDF_Label, ShLabels: TDF_LabelSequence) -> None: ...
	def ID(self) -> Standard_GUID: ...
	def IsLayer(self, lab: TDF_Label) -> bool: ...
	def IsSet(self, L: TDF_Label, aLayer: TCollection_ExtendedString) -> bool: ...
	def IsSet(self, L: TDF_Label, aLayerL: TDF_Label) -> bool: ...
	def IsSet(self, Sh: TopoDS_Shape, aLayer: TCollection_ExtendedString) -> bool: ...
	def IsSet(self, Sh: TopoDS_Shape, aLayerL: TDF_Label) -> bool: ...
	def IsVisible(self, layerL: TDF_Label) -> bool: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def RemoveLayer(self, lab: TDF_Label) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_LayerTool: ...
	def SetLayer(self, L: TDF_Label, LayerL: TDF_Label, shapeInOneLayer: Optional[bool]) -> None: ...
	def SetLayer(self, L: TDF_Label, aLayer: TCollection_ExtendedString, shapeInOneLayer: Optional[bool]) -> None: ...
	def SetLayer(self, Sh: TopoDS_Shape, LayerL: TDF_Label, shapeInOneLayer: Optional[bool]) -> bool: ...
	def SetLayer(self, Sh: TopoDS_Shape, aLayer: TCollection_ExtendedString, shapeInOneLayer: Optional[bool]) -> bool: ...
	def SetVisibility(self, layerL: TDF_Label, isvisible: Optional[bool]) -> None: ...
	def ShapeTool(self) -> XCAFDoc_ShapeTool: ...
	def UnSetLayers(self, L: TDF_Label) -> None: ...
	def UnSetLayers(self, Sh: TopoDS_Shape) -> bool: ...
	def UnSetOneLayer(self, L: TDF_Label, aLayer: TCollection_ExtendedString) -> bool: ...
	def UnSetOneLayer(self, L: TDF_Label, aLayerL: TDF_Label) -> bool: ...
	def UnSetOneLayer(self, Sh: TopoDS_Shape, aLayer: TCollection_ExtendedString) -> bool: ...
	def UnSetOneLayer(self, Sh: TopoDS_Shape, aLayerL: TDF_Label) -> bool: ...

class XCAFDoc_Location(TDF_Attribute):
	def __init__(self) -> None: ...
	def Get(self) -> TopLoc_Location: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, Loc: TopLoc_Location) -> XCAFDoc_Location: ...
	def Set(self, Loc: TopLoc_Location) -> None: ...

class XCAFDoc_Material(TDF_Attribute):
	def __init__(self) -> None: ...
	def GetDensName(self) -> TCollection_HAsciiString: ...
	def GetDensValType(self) -> TCollection_HAsciiString: ...
	def GetDensity(self) -> float: ...
	def GetDescription(self) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetName(self) -> TCollection_HAsciiString: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, aDensity: float, aDensName: TCollection_HAsciiString, aDensValType: TCollection_HAsciiString) -> XCAFDoc_Material: ...
	def Set(self, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, aDensity: float, aDensName: TCollection_HAsciiString, aDensValType: TCollection_HAsciiString) -> None: ...

class XCAFDoc_MaterialTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddMaterial(self, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, aDensity: float, aDensName: TCollection_HAsciiString, aDensValType: TCollection_HAsciiString) -> TDF_Label: ...
	def BaseLabel(self) -> TDF_Label: ...
	@staticmethod
	def GetDensityForShape(self, ShapeL: TDF_Label) -> float: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetMaterial(self, MatL: TDF_Label, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, aDensName: TCollection_HAsciiString, aDensValType: TCollection_HAsciiString) -> Tuple[bool, float]: ...
	def GetMaterialLabels(self, Labels: TDF_LabelSequence) -> None: ...
	def ID(self) -> Standard_GUID: ...
	def IsMaterial(self, lab: TDF_Label) -> bool: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_MaterialTool: ...
	def SetMaterial(self, L: TDF_Label, MatL: TDF_Label) -> None: ...
	def SetMaterial(self, L: TDF_Label, aName: TCollection_HAsciiString, aDescription: TCollection_HAsciiString, aDensity: float, aDensName: TCollection_HAsciiString, aDensValType: TCollection_HAsciiString) -> None: ...
	def ShapeTool(self) -> XCAFDoc_ShapeTool: ...

class XCAFDoc_Note(TDF_Attribute):
	@staticmethod
	def Get(self, theLabel: TDF_Label) -> XCAFDoc_Note: ...
	def GetObject(self) -> XCAFNoteObjects_NoteObject: ...
	@staticmethod
	def IsMine(self, theLabel: TDF_Label) -> bool: ...
	def IsOrphan(self) -> bool: ...
	def Paste(self, theAttrInto: TDF_Attribute, theRT: TDF_RelocationTable) -> None: ...
	def Restore(self, theAttrFrom: TDF_Attribute) -> None: ...
	def Set(self, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString) -> None: ...
	def SetObject(self, theObject: XCAFNoteObjects_NoteObject) -> None: ...
	def TimeStamp(self) -> TCollection_ExtendedString: ...
	def UserName(self) -> TCollection_ExtendedString: ...

class XCAFDoc_NotesTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddNote(self, theNoteLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId) -> XCAFDoc_AssemblyItemRef: ...
	def AddNote(self, theNoteLabel: TDF_Label, theItemLabel: TDF_Label) -> XCAFDoc_AssemblyItemRef: ...
	def AddNoteToAttr(self, theNoteLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theGUID: Standard_GUID) -> XCAFDoc_AssemblyItemRef: ...
	def AddNoteToAttr(self, theNoteLabel: TDF_Label, theItemLabel: TDF_Label, theGUID: Standard_GUID) -> XCAFDoc_AssemblyItemRef: ...
	def AddNoteToSubshape(self, theNoteLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theSubshapeIndex: int) -> XCAFDoc_AssemblyItemRef: ...
	def AddNoteToSubshape(self, theNoteLabel: TDF_Label, theItemLabel: TDF_Label, theSubshapeIndex: int) -> XCAFDoc_AssemblyItemRef: ...
	def CreateBalloon(self, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theComment: TCollection_ExtendedString) -> XCAFDoc_Note: ...
	def CreateBinData(self, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theTitle: TCollection_ExtendedString, theMIMEtype: TCollection_AsciiString, theFile: OSD_File) -> XCAFDoc_Note: ...
	def CreateBinData(self, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theTitle: TCollection_ExtendedString, theMIMEtype: TCollection_AsciiString, theData: TColStd_HArray1OfByte) -> XCAFDoc_Note: ...
	def CreateComment(self, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theComment: TCollection_ExtendedString) -> XCAFDoc_Note: ...
	def DeleteAllNotes(self) -> int: ...
	def DeleteNote(self, theNoteLabel: TDF_Label) -> bool: ...
	def DeleteNotes(self, theNoteLabels: TDF_LabelSequence) -> int: ...
	def DeleteOrphanNotes(self) -> int: ...
	def FindAnnotatedItem(self, theItemId: XCAFDoc_AssemblyItemId) -> TDF_Label: ...
	def FindAnnotatedItem(self, theItemLabel: TDF_Label) -> TDF_Label: ...
	def FindAnnotatedItemAttr(self, theItemId: XCAFDoc_AssemblyItemId, theGUID: Standard_GUID) -> TDF_Label: ...
	def FindAnnotatedItemAttr(self, theItemLabel: TDF_Label, theGUID: Standard_GUID) -> TDF_Label: ...
	def FindAnnotatedItemSubshape(self, theItemId: XCAFDoc_AssemblyItemId, theSubshapeIndex: int) -> TDF_Label: ...
	def FindAnnotatedItemSubshape(self, theItemLabel: TDF_Label, theSubshapeIndex: int) -> TDF_Label: ...
	def GetAnnotatedItems(self, theLabels: TDF_LabelSequence) -> None: ...
	def GetAnnotatedItemsLabel(self) -> TDF_Label: ...
	def GetAttrNotes(self, theItemId: XCAFDoc_AssemblyItemId, theGUID: Standard_GUID, theNoteLabels: TDF_LabelSequence) -> int: ...
	def GetAttrNotes(self, theItemLabel: TDF_Label, theGUID: Standard_GUID, theNoteLabels: TDF_LabelSequence) -> int: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetNotes(self, theNoteLabels: TDF_LabelSequence) -> None: ...
	def GetNotes(self, theItemId: XCAFDoc_AssemblyItemId, theNoteLabels: TDF_LabelSequence) -> int: ...
	def GetNotes(self, theItemLabel: TDF_Label, theNoteLabels: TDF_LabelSequence) -> int: ...
	def GetNotesLabel(self) -> TDF_Label: ...
	def GetOrphanNotes(self, theNoteLabels: TDF_LabelSequence) -> None: ...
	def GetSubshapeNotes(self, theItemId: XCAFDoc_AssemblyItemId, theSubshapeIndex: int, theNoteLabels: TDF_LabelSequence) -> int: ...
	def ID(self) -> Standard_GUID: ...
	def IsAnnotatedItem(self, theItemId: XCAFDoc_AssemblyItemId) -> bool: ...
	def IsAnnotatedItem(self, theItemLabel: TDF_Label) -> bool: ...
	def NbAnnotatedItems(self) -> int: ...
	def NbNotes(self) -> int: ...
	def NbOrphanNotes(self) -> int: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, theAttrInto: TDF_Attribute, theRT: TDF_RelocationTable) -> None: ...
	def RemoveAllAttrNotes(self, theItemId: XCAFDoc_AssemblyItemId, theGUID: Standard_GUID, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveAllAttrNotes(self, theItemLabel: TDF_Label, theGUID: Standard_GUID, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveAllNotes(self, theItemId: XCAFDoc_AssemblyItemId, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveAllNotes(self, theItemLabel: TDF_Label, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveAllSubshapeNotes(self, theItemId: XCAFDoc_AssemblyItemId, theSubshapeIndex: int, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveAttrNote(self, theNoteLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theGUID: Standard_GUID, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveAttrNote(self, theNoteLabel: TDF_Label, theItemLabel: TDF_Label, theGUID: Standard_GUID, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveNote(self, theNoteLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveNote(self, theNoteLabel: TDF_Label, theItemLabel: TDF_Label, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveSubshapeNote(self, theNoteLabel: TDF_Label, theItemId: XCAFDoc_AssemblyItemId, theSubshapeIndex: int, theDelIfOrphan: Optional[bool]) -> bool: ...
	def RemoveSubshapeNote(self, theNoteLabel: TDF_Label, theItemLabel: TDF_Label, theSubshapeIndex: int, theDelIfOrphan: Optional[bool]) -> bool: ...
	def Restore(self, theAttrFrom: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label) -> XCAFDoc_NotesTool: ...

class XCAFDoc_ShapeMapTool(TDF_Attribute):
	def __init__(self) -> None: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetMap(self) -> TopTools_IndexedMapOfShape: ...
	def ID(self) -> Standard_GUID: ...
	def IsSubShape(self, sub: TopoDS_Shape) -> bool: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_ShapeMapTool: ...
	def SetShape(self, S: TopoDS_Shape) -> None: ...

class XCAFDoc_ShapeTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddComponent(self, assembly: TDF_Label, comp: TDF_Label, Loc: TopLoc_Location) -> TDF_Label: ...
	def AddComponent(self, assembly: TDF_Label, comp: TopoDS_Shape, expand: Optional[bool]) -> TDF_Label: ...
	def AddShape(self, S: TopoDS_Shape, makeAssembly: Optional[bool], makePrepare: Optional[bool]) -> TDF_Label: ...
	def AddSubShape(self, shapeL: TDF_Label, sub: TopoDS_Shape) -> TDF_Label: ...
	def AddSubShape(self, shapeL: TDF_Label, sub: TopoDS_Shape, addedSubShapeL: TDF_Label) -> bool: ...
	@staticmethod
	def AutoNaming(self) -> bool: ...
	def BaseLabel(self) -> TDF_Label: ...
	def ComputeShapes(self, L: TDF_Label) -> None: ...
	def ComputeSimpleShapes(self) -> None: ...
	def Expand(self, Shape: TDF_Label) -> bool: ...
	def FindComponent(self, theShape: TopoDS_Shape, Labels: TDF_LabelSequence) -> bool: ...
	def FindMainShape(self, sub: TopoDS_Shape) -> TDF_Label: ...
	def FindMainShapeUsingMap(self, sub: TopoDS_Shape) -> TDF_Label: ...
	@staticmethod
	def FindSHUO(self, Labels: TDF_LabelSequence, theSHUOAttr: XCAFDoc_GraphNode) -> bool: ...
	def FindShape(self, S: TopoDS_Shape, L: TDF_Label, findInstance: Optional[bool]) -> bool: ...
	def FindShape(self, S: TopoDS_Shape, findInstance: Optional[bool]) -> TDF_Label: ...
	def FindSubShape(self, shapeL: TDF_Label, sub: TopoDS_Shape, L: TDF_Label) -> bool: ...
	@staticmethod
	def GetAllComponentSHUO(self, CompLabel: TDF_Label, SHUOAttrs: TDF_AttributeSequence) -> bool: ...
	def GetAllSHUOInstances(self, theSHUO: XCAFDoc_GraphNode, theSHUOShapeSeq: TopTools_SequenceOfShape) -> bool: ...
	@staticmethod
	def GetComponents(self, L: TDF_Label, Labels: TDF_LabelSequence, getsubchilds: Optional[bool]) -> bool: ...
	@staticmethod
	def GetExternRefs(self, L: TDF_Label, SHAS: TColStd_SequenceOfHAsciiString) -> None: ...
	def GetFreeShapes(self, FreeLabels: TDF_LabelSequence) -> None: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	@staticmethod
	def GetLocation(self, L: TDF_Label) -> TopLoc_Location: ...
	def GetNamedProperties(self, theLabel: TDF_Label, theToCreate: Optional[bool]) -> TDataStd_NamedData: ...
	def GetNamedProperties(self, theShape: TopoDS_Shape, theToCreate: Optional[bool]) -> TDataStd_NamedData: ...
	@staticmethod
	def GetReferredShape(self, L: TDF_Label, Label: TDF_Label) -> bool: ...
	@staticmethod
	def GetSHUO(self, SHUOLabel: TDF_Label, aSHUOAttr: XCAFDoc_GraphNode) -> bool: ...
	def GetSHUOInstance(self, theSHUO: XCAFDoc_GraphNode) -> TopoDS_Shape: ...
	@staticmethod
	def GetSHUONextUsage(self, UpperUsageL: TDF_Label, Labels: TDF_LabelSequence) -> bool: ...
	@staticmethod
	def GetSHUOUpperUsage(self, NextUsageL: TDF_Label, Labels: TDF_LabelSequence) -> bool: ...
	@staticmethod
	def GetShape(self, L: TDF_Label, S: TopoDS_Shape) -> bool: ...
	@staticmethod
	def GetShape(self, L: TDF_Label) -> TopoDS_Shape: ...
	def GetShapes(self, Labels: TDF_LabelSequence) -> None: ...
	@staticmethod
	def GetSubShapes(self, L: TDF_Label, Labels: TDF_LabelSequence) -> bool: ...
	@staticmethod
	def GetUsers(self, L: TDF_Label, Labels: TDF_LabelSequence, getsubchilds: Optional[bool]) -> int: ...
	def ID(self) -> Standard_GUID: ...
	def Init(self) -> None: ...
	@staticmethod
	def IsAssembly(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsComponent(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsCompound(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsExternRef(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsFree(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsReference(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsShape(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsSimpleShape(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def IsSubShape(self, L: TDF_Label) -> bool: ...
	def IsSubShape(self, shapeL: TDF_Label, sub: TopoDS_Shape) -> bool: ...
	def IsTopLevel(self, L: TDF_Label) -> bool: ...
	@staticmethod
	def NbComponents(self, L: TDF_Label, getsubchilds: Optional[bool]) -> int: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def NewShape(self) -> TDF_Label: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def RemoveComponent(self, comp: TDF_Label) -> None: ...
	def RemoveSHUO(self, SHUOLabel: TDF_Label) -> bool: ...
	def RemoveShape(self, L: TDF_Label, removeCompletely: Optional[bool]) -> bool: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	def Search(self, S: TopoDS_Shape, L: TDF_Label, findInstance: Optional[bool], findComponent: Optional[bool], findSubshape: Optional[bool]) -> bool: ...
	def SearchUsingMap(self, S: TopoDS_Shape, L: TDF_Label, findWithoutLoc: bool, findSubshape: bool) -> bool: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_ShapeTool: ...
	@staticmethod
	def SetAutoNaming(self, V: bool) -> None: ...
	def SetExternRefs(self, SHAS: TColStd_SequenceOfHAsciiString) -> TDF_Label: ...
	def SetExternRefs(self, L: TDF_Label, SHAS: TColStd_SequenceOfHAsciiString) -> None: ...
	def SetInstanceSHUO(self, theShape: TopoDS_Shape) -> XCAFDoc_GraphNode: ...
	def SetSHUO(self, Labels: TDF_LabelSequence, MainSHUOAttr: XCAFDoc_GraphNode) -> bool: ...
	def SetShape(self, L: TDF_Label, S: TopoDS_Shape) -> None: ...
	def UpdateAssemblies(self) -> None: ...

class XCAFDoc_View(TDF_Attribute):
	def __init__(self) -> None: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetObject(self) -> XCAFView_Object: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label) -> XCAFDoc_View: ...
	def SetObject(self, theViewObject: XCAFView_Object) -> None: ...

class XCAFDoc_ViewTool(TDF_Attribute):
	def __init__(self) -> None: ...
	def AddView(self) -> TDF_Label: ...
	def BaseLabel(self) -> TDF_Label: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def GetRefAnnotationLabel(self, theViewL: TDF_Label, theAnnotationLabels: TDF_LabelSequence) -> bool: ...
	def GetRefClippingPlaneLabel(self, theViewL: TDF_Label, theClippingPlaneLabels: TDF_LabelSequence) -> bool: ...
	def GetRefGDTLabel(self, theViewL: TDF_Label, theGDTLabels: TDF_LabelSequence) -> bool: ...
	def GetRefNoteLabel(self, theViewL: TDF_Label, theNoteLabels: TDF_LabelSequence) -> bool: ...
	def GetRefShapeLabel(self, theViewL: TDF_Label, theShapeLabels: TDF_LabelSequence) -> bool: ...
	def GetViewLabels(self, theLabels: TDF_LabelSequence) -> None: ...
	def GetViewLabelsForAnnotation(self, theAnnotationL: TDF_Label, theViews: TDF_LabelSequence) -> bool: ...
	def GetViewLabelsForClippingPlane(self, theClippingPlaneL: TDF_Label, theViews: TDF_LabelSequence) -> bool: ...
	def GetViewLabelsForGDT(self, theGDTL: TDF_Label, theViews: TDF_LabelSequence) -> bool: ...
	def GetViewLabelsForNote(self, theNoteL: TDF_Label, theViews: TDF_LabelSequence) -> bool: ...
	def GetViewLabelsForShape(self, theShapeL: TDF_Label, theViews: TDF_LabelSequence) -> bool: ...
	def ID(self) -> Standard_GUID: ...
	def IsLocked(self, theViewL: TDF_Label) -> bool: ...
	def IsView(self, theLabel: TDF_Label) -> bool: ...
	def Lock(self, theViewL: TDF_Label) -> None: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def RemoveView(self, theViewL: TDF_Label) -> None: ...
	def Restore(self, with_: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, L: TDF_Label) -> XCAFDoc_ViewTool: ...
	def SetClippingPlanes(self, theClippingPlaneLabels: TDF_LabelSequence, theViewL: TDF_Label) -> None: ...
	def SetView(self, theShapes: TDF_LabelSequence, theGDTs: TDF_LabelSequence, theClippingPlanes: TDF_LabelSequence, theNotes: TDF_LabelSequence, theAnnotations: TDF_LabelSequence, theViewL: TDF_Label) -> None: ...
	def SetView(self, theShapes: TDF_LabelSequence, theGDTs: TDF_LabelSequence, theClippingPlanes: TDF_LabelSequence, theViewL: TDF_Label) -> None: ...
	def SetView(self, theShapes: TDF_LabelSequence, theGDTs: TDF_LabelSequence, theViewL: TDF_Label) -> None: ...
	def Unlock(self, theViewL: TDF_Label) -> None: ...

class XCAFDoc_Volume(TDF_Attribute):
	def __init__(self) -> None: ...
	def Get(self) -> float: ...
	@staticmethod
	def Get(self, label: TDF_Label) -> Tuple[bool, float]: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, Into: TDF_Attribute, RT: TDF_RelocationTable) -> None: ...
	def Restore(self, With: TDF_Attribute) -> None: ...
	def Set(self, vol: float) -> None: ...
	@staticmethod
	def Set(self, label: TDF_Label, vol: float) -> XCAFDoc_Volume: ...

class XCAFDoc_NoteBinData(XCAFDoc_Note):
	def __init__(self) -> None: ...
	def Data(self) -> TColStd_HArray1OfByte: ...
	@staticmethod
	def Get(self, theLabel: TDF_Label) -> XCAFDoc_NoteBinData: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def MIMEtype(self) -> TCollection_AsciiString: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, theAttrInto: TDF_Attribute, theRT: TDF_RelocationTable) -> None: ...
	def Restore(self, theAttrFrom: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theTitle: TCollection_ExtendedString, theMIMEtype: TCollection_AsciiString, theFile: OSD_File) -> XCAFDoc_NoteBinData: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theTitle: TCollection_ExtendedString, theMIMEtype: TCollection_AsciiString, theData: TColStd_HArray1OfByte) -> XCAFDoc_NoteBinData: ...
	def Set(self, theTitle: TCollection_ExtendedString, theMIMEtype: TCollection_AsciiString, theFile: OSD_File) -> bool: ...
	def Set(self, theTitle: TCollection_ExtendedString, theMIMEtype: TCollection_AsciiString, theData: TColStd_HArray1OfByte) -> None: ...
	def Size(self) -> int: ...
	def Title(self) -> TCollection_ExtendedString: ...

class XCAFDoc_NoteComment(XCAFDoc_Note):
	def __init__(self) -> None: ...
	def Comment(self) -> TCollection_ExtendedString: ...
	@staticmethod
	def Get(self, theLabel: TDF_Label) -> XCAFDoc_NoteComment: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	def Paste(self, theAttrInto: TDF_Attribute, theRT: TDF_RelocationTable) -> None: ...
	def Restore(self, theAttrFrom: TDF_Attribute) -> None: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theComment: TCollection_ExtendedString) -> XCAFDoc_NoteComment: ...
	def Set(self, theComment: TCollection_ExtendedString) -> None: ...

class XCAFDoc_NoteBalloon(XCAFDoc_NoteComment):
	def __init__(self) -> None: ...
	@staticmethod
	def Get(self, theLabel: TDF_Label) -> XCAFDoc_NoteBalloon: ...
	@staticmethod
	def GetID(self) -> Standard_GUID: ...
	def ID(self) -> Standard_GUID: ...
	def NewEmpty(self) -> TDF_Attribute: ...
	@staticmethod
	def Set(self, theLabel: TDF_Label, theUserName: TCollection_ExtendedString, theTimeStamp: TCollection_ExtendedString, theComment: TCollection_ExtendedString) -> XCAFDoc_NoteBalloon: ...

#classnotwrapped
class XCAFDoc_DimTolTool:
	pass

#classnotwrapped
class XCAFDoc_GeomTolerance:
	pass
