from enum import IntEnum
from typing import overload, NewType, Optional, Tuple

from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.StepShape import *
from OCC.Core.StepBasic import *
from OCC.Core.STEPControl import *
from OCC.Core.TopoDS import *
from OCC.Core.TDF import *
from OCC.Core.IFSelect import *
from OCC.Core.TCollection import *
from OCC.Core.XSControl import *
from OCC.Core.XCAFDimTolObjects import *
from OCC.Core.StepDimTol import *
from OCC.Core.StepRepr import *
from OCC.Core.StepVisual import *
from OCC.Core.XCAFDoc import *
from OCC.Core.STEPConstruct import *
from OCC.Core.TDocStd import *
from OCC.Core.Resource import *


class STEPCAFControl_ActorWrite(STEPControl_ActorWrite):
	def __init__(self) -> None: ...
	def ClearMap(self) -> None: ...
	def IsAssembly(self, S: TopoDS_Shape) -> bool: ...
	def RegisterAssembly(self, S: TopoDS_Shape) -> None: ...
	def SetStdMode(self, stdmode: Optional[bool]) -> None: ...

class STEPCAFControl_Controller(STEPControl_Controller):
	def __init__(self) -> None: ...
	@staticmethod
	def Init(self) -> bool: ...

class STEPCAFControl_ExternFile(Standard_Transient):
	def __init__(self) -> None: ...
	def GetLabel(self) -> TDF_Label: ...
	def GetLoadStatus(self) -> IFSelect_ReturnStatus: ...
	def GetName(self) -> TCollection_HAsciiString: ...
	def GetTransferStatus(self) -> bool: ...
	def GetWS(self) -> XSControl_WorkSession: ...
	def GetWriteStatus(self) -> IFSelect_ReturnStatus: ...
	def SetLabel(self, L: TDF_Label) -> None: ...
	def SetLoadStatus(self, stat: IFSelect_ReturnStatus) -> None: ...
	def SetName(self, name: TCollection_HAsciiString) -> None: ...
	def SetTransferStatus(self, isok: bool) -> None: ...
	def SetWS(self, WS: XSControl_WorkSession) -> None: ...
	def SetWriteStatus(self, stat: IFSelect_ReturnStatus) -> None: ...

class STEPCAFControl_GDTProperty:
	def __init__(self) -> None: ...
	@staticmethod
	def GetDatumRefModifiers(self, theModifiers: XCAFDimTolObjects_DatumModifiersSequence, theModifWithVal: XCAFDimTolObjects_DatumModifWithValue, theValue: float, theUnit: StepBasic_Unit) -> StepDimTol_HArray1OfDatumReferenceModifier: ...
	@staticmethod
	def GetDatumTargetName(self, theDatumType: XCAFDimTolObjects_DatumTargetType) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetDatumTargetType(self, theDescription: TCollection_HAsciiString, theType: XCAFDimTolObjects_DatumTargetType) -> bool: ...
	@staticmethod
	def GetDimClassOfTolerance(self, theLAF: StepShape_LimitsAndFits, theFV: XCAFDimTolObjects_DimensionFormVariance, theG: XCAFDimTolObjects_DimensionGrade) -> bool: ...
	@staticmethod
	def GetDimModifierName(self, theModifier: XCAFDimTolObjects_DimensionModif) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetDimModifiers(self, theCRI: StepRepr_CompoundRepresentationItem, theModifiers: XCAFDimTolObjects_DimensionModifiersSequence) -> None: ...
	@staticmethod
	def GetDimQualifierName(self, theQualifier: XCAFDimTolObjects_DimensionQualifier) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetDimQualifierType(self, theDescription: TCollection_HAsciiString, theType: XCAFDimTolObjects_DimensionQualifier) -> bool: ...
	@staticmethod
	def GetDimType(self, theName: TCollection_HAsciiString, theType: XCAFDimTolObjects_DimensionType) -> bool: ...
	@staticmethod
	def GetDimTypeName(self, theType: XCAFDimTolObjects_DimensionType) -> TCollection_HAsciiString: ...
	@staticmethod
	def GetGeomTolerance(self, theType: XCAFDimTolObjects_GeomToleranceType) -> StepDimTol_GeometricTolerance: ...
	@staticmethod
	def GetGeomToleranceModifier(self, theModifier: XCAFDimTolObjects_GeomToleranceModif) -> StepDimTol_GeometricToleranceModifier: ...
	@staticmethod
	def GetGeomToleranceType(self, theType: XCAFDimTolObjects_GeomToleranceType) -> StepDimTol_GeometricToleranceType: ...
	@staticmethod
	def GetGeomToleranceType(self, theType: StepDimTol_GeometricToleranceType) -> XCAFDimTolObjects_GeomToleranceType: ...
	@staticmethod
	def GetLimitsAndFits(self, theHole: bool, theFormVariance: XCAFDimTolObjects_DimensionFormVariance, theGrade: XCAFDimTolObjects_DimensionGrade) -> StepShape_LimitsAndFits: ...
	@staticmethod
	def GetTessellation(self, theShape: TopoDS_Shape) -> StepVisual_TessellatedGeometricSet: ...
	@staticmethod
	def GetTolValueType(self, theDescription: TCollection_HAsciiString, theType: XCAFDimTolObjects_GeomToleranceTypeValue) -> bool: ...
	@staticmethod
	def GetTolValueType(self, theType: XCAFDimTolObjects_GeomToleranceTypeValue) -> TCollection_HAsciiString: ...
	@staticmethod
	def IsDimensionalLocation(self, theType: XCAFDimTolObjects_DimensionType) -> bool: ...
	@staticmethod
	def IsDimensionalSize(self, theType: XCAFDimTolObjects_DimensionType) -> bool: ...

class STEPCAFControl_Reader:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, WS: XSControl_WorkSession, scratch: Optional[bool]) -> None: ...
	def ChangeReader(self) -> STEPControl_Reader: ...
	def ExternFile(self, name: str, ef: STEPCAFControl_ExternFile) -> bool: ...
	def ExternFiles(self) -> False: ...
	@staticmethod
	def FindInstance(self, NAUO: StepRepr_NextAssemblyUsageOccurrence, STool: XCAFDoc_ShapeTool, Tool: STEPConstruct_Tool, ShapeLabelMap: XCAFDoc_DataMapOfShapeLabel) -> TDF_Label: ...
	def GetColorMode(self) -> bool: ...
	def GetGDTMode(self) -> bool: ...
	def GetLayerMode(self) -> bool: ...
	def GetMatMode(self) -> bool: ...
	def GetNameMode(self) -> bool: ...
	def GetPropsMode(self) -> bool: ...
	def GetSHUOMode(self) -> bool: ...
	def GetViewMode(self) -> bool: ...
	def Init(self, WS: XSControl_WorkSession, scratch: Optional[bool]) -> None: ...
	def NbRootsForTransfer(self) -> int: ...
	def Perform(self, filename: TCollection_AsciiString, doc: TDocStd_Document) -> bool: ...
	def Perform(self, filename: str, doc: TDocStd_Document) -> bool: ...
	def ReadFile(self, filename: str) -> IFSelect_ReturnStatus: ...
	def Reader(self) -> STEPControl_Reader: ...
	def SetColorMode(self, colormode: bool) -> None: ...
	def SetGDTMode(self, gdtmode: bool) -> None: ...
	def SetLayerMode(self, layermode: bool) -> None: ...
	def SetMatMode(self, matmode: bool) -> None: ...
	def SetNameMode(self, namemode: bool) -> None: ...
	def SetPropsMode(self, propsmode: bool) -> None: ...
	def SetSHUOMode(self, shuomode: bool) -> None: ...
	def SetSourceCodePage(self, theCode: Resource_FormatType) -> None: ...
	def SetViewMode(self, viewmode: bool) -> None: ...
	def SourceCodePage(self) -> Resource_FormatType: ...
	def Transfer(self, doc: TDocStd_Document) -> bool: ...
	def TransferOneRoot(self, num: int, doc: TDocStd_Document) -> bool: ...

class STEPCAFControl_Writer:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, WS: XSControl_WorkSession, scratch: Optional[bool]) -> None: ...
	def ChangeWriter(self) -> STEPControl_Writer: ...
	def ExternFile(self, L: TDF_Label, ef: STEPCAFControl_ExternFile) -> bool: ...
	def ExternFile(self, name: str, ef: STEPCAFControl_ExternFile) -> bool: ...
	def ExternFiles(self) -> False: ...
	def GetColorMode(self) -> bool: ...
	def GetDimTolMode(self) -> bool: ...
	def GetLayerMode(self) -> bool: ...
	def GetMaterialMode(self) -> bool: ...
	def GetNameMode(self) -> bool: ...
	def GetPropsMode(self) -> bool: ...
	def GetSHUOMode(self) -> bool: ...
	def Init(self, WS: XSControl_WorkSession, scratch: Optional[bool]) -> None: ...
	def Perform(self, doc: TDocStd_Document, filename: TCollection_AsciiString) -> bool: ...
	def Perform(self, doc: TDocStd_Document, filename: str) -> bool: ...
	def SetColorMode(self, colormode: bool) -> None: ...
	def SetDimTolMode(self, dimtolmode: bool) -> None: ...
	def SetLayerMode(self, layermode: bool) -> None: ...
	def SetMaterialMode(self, matmode: bool) -> None: ...
	def SetNameMode(self, namemode: bool) -> None: ...
	def SetPropsMode(self, propsmode: bool) -> None: ...
	def SetSHUOMode(self, shuomode: bool) -> None: ...
	def Transfer(self, doc: TDocStd_Document, mode: Optional[STEPControl_StepModelType], multi: Optional[str]) -> bool: ...
	def Transfer(self, L: TDF_Label, mode: Optional[STEPControl_StepModelType], multi: Optional[str]) -> bool: ...
	def Write(self, filename: str) -> IFSelect_ReturnStatus: ...
	def Writer(self) -> STEPControl_Writer: ...
