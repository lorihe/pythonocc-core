from enum import IntEnum
from typing import overload, NewType, Optional, Tuple

from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.BVH import *
from OCC.Core.Quantity import *
from OCC.Core.gp import *
from OCC.Core.Aspect import *
from OCC.Core.TCollection import *
from OCC.Core.Geom import *
from OCC.Core.Bnd import *
from OCC.Core.TColStd import *
from OCC.Core.Image import *
from OCC.Core.OSD import *
from OCC.Core.Media import *

Graphic3d_ArrayFlags = NewType('Graphic3d_ArrayFlags', Standard_Integer)
Graphic3d_ZLayerId = NewType('Graphic3d_ZLayerId', Standard_Integer)

class Graphic3d_ClipState(IntEnum):
	Graphic3d_ClipState_Out: int = ...
	Graphic3d_ClipState_In: int = ...
	Graphic3d_ClipState_On: int = ...
Graphic3d_ClipState_Out = Graphic3d_ClipState.Graphic3d_ClipState_Out
Graphic3d_ClipState_In = Graphic3d_ClipState.Graphic3d_ClipState_In
Graphic3d_ClipState_On = Graphic3d_ClipState.Graphic3d_ClipState_On

class Graphic3d_BufferType(IntEnum):
	Graphic3d_BT_RGB: int = ...
	Graphic3d_BT_RGBA: int = ...
	Graphic3d_BT_Depth: int = ...
	Graphic3d_BT_RGB_RayTraceHdrLeft: int = ...
Graphic3d_BT_RGB = Graphic3d_BufferType.Graphic3d_BT_RGB
Graphic3d_BT_RGBA = Graphic3d_BufferType.Graphic3d_BT_RGBA
Graphic3d_BT_Depth = Graphic3d_BufferType.Graphic3d_BT_Depth
Graphic3d_BT_RGB_RayTraceHdrLeft = Graphic3d_BufferType.Graphic3d_BT_RGB_RayTraceHdrLeft

class Graphic3d_FrameStatsTimer(IntEnum):
	Graphic3d_FrameStatsTimer_ElapsedFrame: int = ...
	Graphic3d_FrameStatsTimer_CpuFrame: int = ...
	Graphic3d_FrameStatsTimer_CpuCulling: int = ...
	Graphic3d_FrameStatsTimer_CpuPicking: int = ...
	Graphic3d_FrameStatsTimer_CpuDynamics: int = ...
Graphic3d_FrameStatsTimer_ElapsedFrame = Graphic3d_FrameStatsTimer.Graphic3d_FrameStatsTimer_ElapsedFrame
Graphic3d_FrameStatsTimer_CpuFrame = Graphic3d_FrameStatsTimer.Graphic3d_FrameStatsTimer_CpuFrame
Graphic3d_FrameStatsTimer_CpuCulling = Graphic3d_FrameStatsTimer.Graphic3d_FrameStatsTimer_CpuCulling
Graphic3d_FrameStatsTimer_CpuPicking = Graphic3d_FrameStatsTimer.Graphic3d_FrameStatsTimer_CpuPicking
Graphic3d_FrameStatsTimer_CpuDynamics = Graphic3d_FrameStatsTimer.Graphic3d_FrameStatsTimer_CpuDynamics
Graphic3d_FrameStatsTimer_NB = .Graphic3d_FrameStatsTimer_NB

class Graphic3d_VerticalTextAlignment(IntEnum):
	Graphic3d_VTA_BOTTOM: int = ...
	Graphic3d_VTA_CENTER: int = ...
	Graphic3d_VTA_TOP: int = ...
	Graphic3d_VTA_TOPFIRSTLINE: int = ...
Graphic3d_VTA_BOTTOM = Graphic3d_VerticalTextAlignment.Graphic3d_VTA_BOTTOM
Graphic3d_VTA_CENTER = Graphic3d_VerticalTextAlignment.Graphic3d_VTA_CENTER
Graphic3d_VTA_TOP = Graphic3d_VerticalTextAlignment.Graphic3d_VTA_TOP
Graphic3d_VTA_TOPFIRSTLINE = Graphic3d_VerticalTextAlignment.Graphic3d_VTA_TOPFIRSTLINE

class Graphic3d_LevelOfTextureAnisotropy(IntEnum):
	Graphic3d_LOTA_OFF: int = ...
	Graphic3d_LOTA_FAST: int = ...
	Graphic3d_LOTA_MIDDLE: int = ...
	Graphic3d_LOTA_QUALITY: int = ...
Graphic3d_LOTA_OFF = Graphic3d_LevelOfTextureAnisotropy.Graphic3d_LOTA_OFF
Graphic3d_LOTA_FAST = Graphic3d_LevelOfTextureAnisotropy.Graphic3d_LOTA_FAST
Graphic3d_LOTA_MIDDLE = Graphic3d_LevelOfTextureAnisotropy.Graphic3d_LOTA_MIDDLE
Graphic3d_LOTA_QUALITY = Graphic3d_LevelOfTextureAnisotropy.Graphic3d_LOTA_QUALITY

class Graphic3d_TypeOfLimit(IntEnum):
	Graphic3d_TypeOfLimit_MaxNbLights: int = ...
	Graphic3d_TypeOfLimit_MaxNbClipPlanes: int = ...
	Graphic3d_TypeOfLimit_MaxNbViews: int = ...
	Graphic3d_TypeOfLimit_MaxTextureSize: int = ...
	Graphic3d_TypeOfLimit_MaxViewDumpSizeX: int = ...
	Graphic3d_TypeOfLimit_MaxViewDumpSizeY: int = ...
	Graphic3d_TypeOfLimit_MaxCombinedTextureUnits: int = ...
	Graphic3d_TypeOfLimit_MaxMsaa: int = ...
	Graphic3d_TypeOfLimit_HasRayTracing: int = ...
	Graphic3d_TypeOfLimit_HasRayTracingTextures: int = ...
	Graphic3d_TypeOfLimit_HasRayTracingAdaptiveSampling: int = ...
	Graphic3d_TypeOfLimit_HasRayTracingAdaptiveSamplingAtomic: int = ...
	Graphic3d_TypeOfLimit_HasBlendedOit: int = ...
	Graphic3d_TypeOfLimit_HasBlendedOitMsaa: int = ...
	Graphic3d_TypeOfLimit_HasFlatShading: int = ...
	Graphic3d_TypeOfLimit_HasMeshEdges: int = ...
	Graphic3d_TypeOfLimit_IsWorkaroundFBO: int = ...
	Graphic3d_TypeOfLimit_NB: int = ...
Graphic3d_TypeOfLimit_MaxNbLights = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxNbLights
Graphic3d_TypeOfLimit_MaxNbClipPlanes = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxNbClipPlanes
Graphic3d_TypeOfLimit_MaxNbViews = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxNbViews
Graphic3d_TypeOfLimit_MaxTextureSize = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxTextureSize
Graphic3d_TypeOfLimit_MaxViewDumpSizeX = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxViewDumpSizeX
Graphic3d_TypeOfLimit_MaxViewDumpSizeY = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxViewDumpSizeY
Graphic3d_TypeOfLimit_MaxCombinedTextureUnits = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxCombinedTextureUnits
Graphic3d_TypeOfLimit_MaxMsaa = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_MaxMsaa
Graphic3d_TypeOfLimit_HasRayTracing = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasRayTracing
Graphic3d_TypeOfLimit_HasRayTracingTextures = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasRayTracingTextures
Graphic3d_TypeOfLimit_HasRayTracingAdaptiveSampling = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasRayTracingAdaptiveSampling
Graphic3d_TypeOfLimit_HasRayTracingAdaptiveSamplingAtomic = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasRayTracingAdaptiveSamplingAtomic
Graphic3d_TypeOfLimit_HasBlendedOit = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasBlendedOit
Graphic3d_TypeOfLimit_HasBlendedOitMsaa = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasBlendedOitMsaa
Graphic3d_TypeOfLimit_HasFlatShading = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasFlatShading
Graphic3d_TypeOfLimit_HasMeshEdges = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_HasMeshEdges
Graphic3d_TypeOfLimit_IsWorkaroundFBO = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_IsWorkaroundFBO
Graphic3d_TypeOfLimit_NB = Graphic3d_TypeOfLimit.Graphic3d_TypeOfLimit_NB

class Graphic3d_DiagnosticInfo(IntEnum):
	Graphic3d_DiagnosticInfo_Device: int = ...
	Graphic3d_DiagnosticInfo_FrameBuffer: int = ...
	Graphic3d_DiagnosticInfo_Limits: int = ...
	Graphic3d_DiagnosticInfo_Memory: int = ...
	Graphic3d_DiagnosticInfo_NativePlatform: int = ...
	Graphic3d_DiagnosticInfo_Extensions: int = ...
	Graphic3d_DiagnosticInfo_Short: int = ...
	Graphic3d_DiagnosticInfo_Basic: int = ...
	Graphic3d_DiagnosticInfo_Complete: int = ...
Graphic3d_DiagnosticInfo_Device = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Device
Graphic3d_DiagnosticInfo_FrameBuffer = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_FrameBuffer
Graphic3d_DiagnosticInfo_Limits = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Limits
Graphic3d_DiagnosticInfo_Memory = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Memory
Graphic3d_DiagnosticInfo_NativePlatform = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_NativePlatform
Graphic3d_DiagnosticInfo_Extensions = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Extensions
Graphic3d_DiagnosticInfo_Short = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Short
Graphic3d_DiagnosticInfo_Basic = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Basic
Graphic3d_DiagnosticInfo_Complete = Graphic3d_DiagnosticInfo.Graphic3d_DiagnosticInfo_Complete

class Graphic3d_StereoMode(IntEnum):
	Graphic3d_StereoMode_QuadBuffer: int = ...
	Graphic3d_StereoMode_Anaglyph: int = ...
	Graphic3d_StereoMode_RowInterlaced: int = ...
	Graphic3d_StereoMode_ColumnInterlaced: int = ...
	Graphic3d_StereoMode_ChessBoard: int = ...
	Graphic3d_StereoMode_SideBySide: int = ...
	Graphic3d_StereoMode_OverUnder: int = ...
	Graphic3d_StereoMode_SoftPageFlip: int = ...
	Graphic3d_StereoMode_NB: int = ...
Graphic3d_StereoMode_QuadBuffer = Graphic3d_StereoMode.Graphic3d_StereoMode_QuadBuffer
Graphic3d_StereoMode_Anaglyph = Graphic3d_StereoMode.Graphic3d_StereoMode_Anaglyph
Graphic3d_StereoMode_RowInterlaced = Graphic3d_StereoMode.Graphic3d_StereoMode_RowInterlaced
Graphic3d_StereoMode_ColumnInterlaced = Graphic3d_StereoMode.Graphic3d_StereoMode_ColumnInterlaced
Graphic3d_StereoMode_ChessBoard = Graphic3d_StereoMode.Graphic3d_StereoMode_ChessBoard
Graphic3d_StereoMode_SideBySide = Graphic3d_StereoMode.Graphic3d_StereoMode_SideBySide
Graphic3d_StereoMode_OverUnder = Graphic3d_StereoMode.Graphic3d_StereoMode_OverUnder
Graphic3d_StereoMode_SoftPageFlip = Graphic3d_StereoMode.Graphic3d_StereoMode_SoftPageFlip
Graphic3d_StereoMode_NB = Graphic3d_StereoMode.Graphic3d_StereoMode_NB

class Graphic3d_AlphaMode(IntEnum):
	Graphic3d_AlphaMode_Opaque: int = ...
	Graphic3d_AlphaMode_Mask: int = ...
	Graphic3d_AlphaMode_Blend: int = ...
	Graphic3d_AlphaMode_BlendAuto: int = ...
Graphic3d_AlphaMode_Opaque = Graphic3d_AlphaMode.Graphic3d_AlphaMode_Opaque
Graphic3d_AlphaMode_Mask = Graphic3d_AlphaMode.Graphic3d_AlphaMode_Mask
Graphic3d_AlphaMode_Blend = Graphic3d_AlphaMode.Graphic3d_AlphaMode_Blend
Graphic3d_AlphaMode_BlendAuto = Graphic3d_AlphaMode.Graphic3d_AlphaMode_BlendAuto

class Graphic3d_FresnelModel(IntEnum):
	Graphic3d_FM_SCHLICK: int = ...
	Graphic3d_FM_CONSTANT: int = ...
	Graphic3d_FM_CONDUCTOR: int = ...
	Graphic3d_FM_DIELECTRIC: int = ...
Graphic3d_FM_SCHLICK = Graphic3d_FresnelModel.Graphic3d_FM_SCHLICK
Graphic3d_FM_CONSTANT = Graphic3d_FresnelModel.Graphic3d_FM_CONSTANT
Graphic3d_FM_CONDUCTOR = Graphic3d_FresnelModel.Graphic3d_FM_CONDUCTOR
Graphic3d_FM_DIELECTRIC = Graphic3d_FresnelModel.Graphic3d_FM_DIELECTRIC

class Graphic3d_TypeOfReflection(IntEnum):
	Graphic3d_TOR_AMBIENT: int = ...
	Graphic3d_TOR_DIFFUSE: int = ...
	Graphic3d_TOR_SPECULAR: int = ...
	Graphic3d_TOR_EMISSION: int = ...
Graphic3d_TOR_AMBIENT = Graphic3d_TypeOfReflection.Graphic3d_TOR_AMBIENT
Graphic3d_TOR_DIFFUSE = Graphic3d_TypeOfReflection.Graphic3d_TOR_DIFFUSE
Graphic3d_TOR_SPECULAR = Graphic3d_TypeOfReflection.Graphic3d_TOR_SPECULAR
Graphic3d_TOR_EMISSION = Graphic3d_TypeOfReflection.Graphic3d_TOR_EMISSION
Graphic3d_TypeOfReflection_NB = .Graphic3d_TypeOfReflection_NB

class Graphic3d_RenderTransparentMethod(IntEnum):
	Graphic3d_RTM_BLEND_UNORDERED: int = ...
	Graphic3d_RTM_BLEND_OIT: int = ...
Graphic3d_RTM_BLEND_UNORDERED = Graphic3d_RenderTransparentMethod.Graphic3d_RTM_BLEND_UNORDERED
Graphic3d_RTM_BLEND_OIT = Graphic3d_RenderTransparentMethod.Graphic3d_RTM_BLEND_OIT

class Graphic3d_RenderingMode(IntEnum):
	Graphic3d_RM_RASTERIZATION: int = ...
	Graphic3d_RM_RAYTRACING: int = ...
Graphic3d_RM_RASTERIZATION = Graphic3d_RenderingMode.Graphic3d_RM_RASTERIZATION
Graphic3d_RM_RAYTRACING = Graphic3d_RenderingMode.Graphic3d_RM_RAYTRACING

class Graphic3d_FrameStatsCounter(IntEnum):
	Graphic3d_FrameStatsCounter_NbLayers: int = ...
	Graphic3d_FrameStatsCounter_NbLayersNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbStructs: int = ...
	Graphic3d_FrameStatsCounter_NbStructsNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbGroupsNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbElemsNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbElemsFillNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbElemsLineNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbElemsPointNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbElemsTextNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbTrianglesNotCulled: int = ...
	Graphic3d_FrameStatsCounter_NbPointsNotCulled: int = ...
	Graphic3d_FrameStatsCounter_EstimatedBytesGeom: int = ...
	Graphic3d_FrameStatsCounter_EstimatedBytesFbos: int = ...
	Graphic3d_FrameStatsCounter_EstimatedBytesTextures: int = ...
Graphic3d_FrameStatsCounter_NbLayers = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbLayers
Graphic3d_FrameStatsCounter_NbLayersNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbLayersNotCulled
Graphic3d_FrameStatsCounter_NbStructs = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbStructs
Graphic3d_FrameStatsCounter_NbStructsNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbStructsNotCulled
Graphic3d_FrameStatsCounter_NbGroupsNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbGroupsNotCulled
Graphic3d_FrameStatsCounter_NbElemsNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbElemsNotCulled
Graphic3d_FrameStatsCounter_NbElemsFillNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbElemsFillNotCulled
Graphic3d_FrameStatsCounter_NbElemsLineNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbElemsLineNotCulled
Graphic3d_FrameStatsCounter_NbElemsPointNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbElemsPointNotCulled
Graphic3d_FrameStatsCounter_NbElemsTextNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbElemsTextNotCulled
Graphic3d_FrameStatsCounter_NbTrianglesNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbTrianglesNotCulled
Graphic3d_FrameStatsCounter_NbPointsNotCulled = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_NbPointsNotCulled
Graphic3d_FrameStatsCounter_EstimatedBytesGeom = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_EstimatedBytesGeom
Graphic3d_FrameStatsCounter_EstimatedBytesFbos = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_EstimatedBytesFbos
Graphic3d_FrameStatsCounter_EstimatedBytesTextures = Graphic3d_FrameStatsCounter.Graphic3d_FrameStatsCounter_EstimatedBytesTextures
Graphic3d_FrameStatsCounter_NB = .Graphic3d_FrameStatsCounter_NB

class Graphic3d_TypeOfBackground(IntEnum):
	Graphic3d_TOB_NONE: int = ...
	Graphic3d_TOB_GRADIENT: int = ...
	Graphic3d_TOB_TEXTURE: int = ...
	Graphic3d_TOB_CUBEMAP: int = ...
Graphic3d_TOB_NONE = Graphic3d_TypeOfBackground.Graphic3d_TOB_NONE
Graphic3d_TOB_GRADIENT = Graphic3d_TypeOfBackground.Graphic3d_TOB_GRADIENT
Graphic3d_TOB_TEXTURE = Graphic3d_TypeOfBackground.Graphic3d_TOB_TEXTURE
Graphic3d_TOB_CUBEMAP = Graphic3d_TypeOfBackground.Graphic3d_TOB_CUBEMAP
Graphic3d_TypeOfBackground_NB = .Graphic3d_TypeOfBackground_NB

class Graphic3d_TypeOfStructure(IntEnum):
	Graphic3d_TOS_WIREFRAME: int = ...
	Graphic3d_TOS_SHADING: int = ...
	Graphic3d_TOS_COMPUTED: int = ...
	Graphic3d_TOS_ALL: int = ...
Graphic3d_TOS_WIREFRAME = Graphic3d_TypeOfStructure.Graphic3d_TOS_WIREFRAME
Graphic3d_TOS_SHADING = Graphic3d_TypeOfStructure.Graphic3d_TOS_SHADING
Graphic3d_TOS_COMPUTED = Graphic3d_TypeOfStructure.Graphic3d_TOS_COMPUTED
Graphic3d_TOS_ALL = Graphic3d_TypeOfStructure.Graphic3d_TOS_ALL

class Graphic3d_TypeOfTextureMode(IntEnum):
	Graphic3d_TOTM_OBJECT: int = ...
	Graphic3d_TOTM_SPHERE: int = ...
	Graphic3d_TOTM_EYE: int = ...
	Graphic3d_TOTM_MANUAL: int = ...
	Graphic3d_TOTM_SPRITE: int = ...
Graphic3d_TOTM_OBJECT = Graphic3d_TypeOfTextureMode.Graphic3d_TOTM_OBJECT
Graphic3d_TOTM_SPHERE = Graphic3d_TypeOfTextureMode.Graphic3d_TOTM_SPHERE
Graphic3d_TOTM_EYE = Graphic3d_TypeOfTextureMode.Graphic3d_TOTM_EYE
Graphic3d_TOTM_MANUAL = Graphic3d_TypeOfTextureMode.Graphic3d_TOTM_MANUAL
Graphic3d_TOTM_SPRITE = Graphic3d_TypeOfTextureMode.Graphic3d_TOTM_SPRITE

class Graphic3d_TypeOfShaderObject(IntEnum):
	Graphic3d_TOS_VERTEX: int = ...
	Graphic3d_TOS_TESS_CONTROL: int = ...
	Graphic3d_TOS_TESS_EVALUATION: int = ...
	Graphic3d_TOS_GEOMETRY: int = ...
	Graphic3d_TOS_FRAGMENT: int = ...
	Graphic3d_TOS_COMPUTE: int = ...
Graphic3d_TOS_VERTEX = Graphic3d_TypeOfShaderObject.Graphic3d_TOS_VERTEX
Graphic3d_TOS_TESS_CONTROL = Graphic3d_TypeOfShaderObject.Graphic3d_TOS_TESS_CONTROL
Graphic3d_TOS_TESS_EVALUATION = Graphic3d_TypeOfShaderObject.Graphic3d_TOS_TESS_EVALUATION
Graphic3d_TOS_GEOMETRY = Graphic3d_TypeOfShaderObject.Graphic3d_TOS_GEOMETRY
Graphic3d_TOS_FRAGMENT = Graphic3d_TypeOfShaderObject.Graphic3d_TOS_FRAGMENT
Graphic3d_TOS_COMPUTE = Graphic3d_TypeOfShaderObject.Graphic3d_TOS_COMPUTE

class Graphic3d_ZLayerSetting(IntEnum):
	Graphic3d_ZLayerDepthTest: int = ...
	Graphic3d_ZLayerDepthWrite: int = ...
	Graphic3d_ZLayerDepthClear: int = ...
	Graphic3d_ZLayerDepthOffset: int = ...
Graphic3d_ZLayerDepthTest = Graphic3d_ZLayerSetting.Graphic3d_ZLayerDepthTest
Graphic3d_ZLayerDepthWrite = Graphic3d_ZLayerSetting.Graphic3d_ZLayerDepthWrite
Graphic3d_ZLayerDepthClear = Graphic3d_ZLayerSetting.Graphic3d_ZLayerDepthClear
Graphic3d_ZLayerDepthOffset = Graphic3d_ZLayerSetting.Graphic3d_ZLayerDepthOffset

class Graphic3d_CappingFlags(IntEnum):
	Graphic3d_CappingFlags_None: int = ...
	Graphic3d_CappingFlags_ObjectMaterial: int = ...
	Graphic3d_CappingFlags_ObjectTexture: int = ...
	Graphic3d_CappingFlags_ObjectShader: int = ...
	Graphic3d_CappingFlags_ObjectAspect: int = ...
Graphic3d_CappingFlags_None = Graphic3d_CappingFlags.Graphic3d_CappingFlags_None
Graphic3d_CappingFlags_ObjectMaterial = Graphic3d_CappingFlags.Graphic3d_CappingFlags_ObjectMaterial
Graphic3d_CappingFlags_ObjectTexture = Graphic3d_CappingFlags.Graphic3d_CappingFlags_ObjectTexture
Graphic3d_CappingFlags_ObjectShader = Graphic3d_CappingFlags.Graphic3d_CappingFlags_ObjectShader
Graphic3d_CappingFlags_ObjectAspect = Graphic3d_CappingFlags.Graphic3d_CappingFlags_ObjectAspect

class Graphic3d_NameOfTexturePlane(IntEnum):
	Graphic3d_NOTP_XY: int = ...
	Graphic3d_NOTP_YZ: int = ...
	Graphic3d_NOTP_ZX: int = ...
	Graphic3d_NOTP_UNKNOWN: int = ...
Graphic3d_NOTP_XY = Graphic3d_NameOfTexturePlane.Graphic3d_NOTP_XY
Graphic3d_NOTP_YZ = Graphic3d_NameOfTexturePlane.Graphic3d_NOTP_YZ
Graphic3d_NOTP_ZX = Graphic3d_NameOfTexturePlane.Graphic3d_NOTP_ZX
Graphic3d_NOTP_UNKNOWN = Graphic3d_NameOfTexturePlane.Graphic3d_NOTP_UNKNOWN

class Graphic3d_TypeOfShadingModel(IntEnum):
	Graphic3d_TOSM_DEFAULT: int = ...
	Graphic3d_TOSM_UNLIT: int = ...
	Graphic3d_TOSM_FACET: int = ...
	Graphic3d_TOSM_VERTEX: int = ...
	Graphic3d_TOSM_FRAGMENT: int = ...
	Graphic3d_TOSM_NONE: int = ...
	V3d_COLOR: int = ...
	V3d_FLAT: int = ...
	V3d_GOURAUD: int = ...
	V3d_PHONG: int = ...
Graphic3d_TOSM_DEFAULT = Graphic3d_TypeOfShadingModel.Graphic3d_TOSM_DEFAULT
Graphic3d_TOSM_UNLIT = Graphic3d_TypeOfShadingModel.Graphic3d_TOSM_UNLIT
Graphic3d_TOSM_FACET = Graphic3d_TypeOfShadingModel.Graphic3d_TOSM_FACET
Graphic3d_TOSM_VERTEX = Graphic3d_TypeOfShadingModel.Graphic3d_TOSM_VERTEX
Graphic3d_TOSM_FRAGMENT = Graphic3d_TypeOfShadingModel.Graphic3d_TOSM_FRAGMENT
Graphic3d_TOSM_NONE = Graphic3d_TypeOfShadingModel.Graphic3d_TOSM_NONE
V3d_COLOR = Graphic3d_TypeOfShadingModel.V3d_COLOR
V3d_FLAT = Graphic3d_TypeOfShadingModel.V3d_FLAT
V3d_GOURAUD = Graphic3d_TypeOfShadingModel.V3d_GOURAUD
V3d_PHONG = Graphic3d_TypeOfShadingModel.V3d_PHONG
Graphic3d_TypeOfShadingModel_NB = .Graphic3d_TypeOfShadingModel_NB

class Graphic3d_TypeOfPrimitiveArray(IntEnum):
	Graphic3d_TOPA_UNDEFINED: int = ...
	Graphic3d_TOPA_POINTS: int = ...
	Graphic3d_TOPA_SEGMENTS: int = ...
	Graphic3d_TOPA_POLYLINES: int = ...
	Graphic3d_TOPA_TRIANGLES: int = ...
	Graphic3d_TOPA_TRIANGLESTRIPS: int = ...
	Graphic3d_TOPA_TRIANGLEFANS: int = ...
	Graphic3d_TOPA_LINES_ADJACENCY: int = ...
	Graphic3d_TOPA_LINE_STRIP_ADJACENCY: int = ...
	Graphic3d_TOPA_TRIANGLES_ADJACENCY: int = ...
	Graphic3d_TOPA_TRIANGLE_STRIP_ADJACENCY: int = ...
	Graphic3d_TOPA_QUADRANGLES: int = ...
	Graphic3d_TOPA_QUADRANGLESTRIPS: int = ...
	Graphic3d_TOPA_POLYGONS: int = ...
Graphic3d_TOPA_UNDEFINED = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_UNDEFINED
Graphic3d_TOPA_POINTS = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_POINTS
Graphic3d_TOPA_SEGMENTS = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_SEGMENTS
Graphic3d_TOPA_POLYLINES = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_POLYLINES
Graphic3d_TOPA_TRIANGLES = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_TRIANGLES
Graphic3d_TOPA_TRIANGLESTRIPS = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_TRIANGLESTRIPS
Graphic3d_TOPA_TRIANGLEFANS = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_TRIANGLEFANS
Graphic3d_TOPA_LINES_ADJACENCY = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_LINES_ADJACENCY
Graphic3d_TOPA_LINE_STRIP_ADJACENCY = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_LINE_STRIP_ADJACENCY
Graphic3d_TOPA_TRIANGLES_ADJACENCY = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_TRIANGLES_ADJACENCY
Graphic3d_TOPA_TRIANGLE_STRIP_ADJACENCY = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_TRIANGLE_STRIP_ADJACENCY
Graphic3d_TOPA_QUADRANGLES = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_QUADRANGLES
Graphic3d_TOPA_QUADRANGLESTRIPS = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_QUADRANGLESTRIPS
Graphic3d_TOPA_POLYGONS = Graphic3d_TypeOfPrimitiveArray.Graphic3d_TOPA_POLYGONS

class Graphic3d_ToneMappingMethod(IntEnum):
	Graphic3d_ToneMappingMethod_Disabled: int = ...
	Graphic3d_ToneMappingMethod_Filmic: int = ...
Graphic3d_ToneMappingMethod_Disabled = Graphic3d_ToneMappingMethod.Graphic3d_ToneMappingMethod_Disabled
Graphic3d_ToneMappingMethod_Filmic = Graphic3d_ToneMappingMethod.Graphic3d_ToneMappingMethod_Filmic

class Graphic3d_TypeOfTexture(IntEnum):
	Graphic3d_TOT_1D: int = ...
	Graphic3d_TOT_2D: int = ...
	Graphic3d_TOT_2D_MIPMAP: int = ...
	Graphic3d_TOT_CUBEMAP: int = ...
Graphic3d_TOT_1D = Graphic3d_TypeOfTexture.Graphic3d_TOT_1D
Graphic3d_TOT_2D = Graphic3d_TypeOfTexture.Graphic3d_TOT_2D
Graphic3d_TOT_2D_MIPMAP = Graphic3d_TypeOfTexture.Graphic3d_TOT_2D_MIPMAP
Graphic3d_TOT_CUBEMAP = Graphic3d_TypeOfTexture.Graphic3d_TOT_CUBEMAP

class Graphic3d_TypeOfMaterial(IntEnum):
	Graphic3d_MATERIAL_ASPECT: int = ...
	Graphic3d_MATERIAL_PHYSIC: int = ...
Graphic3d_MATERIAL_ASPECT = Graphic3d_TypeOfMaterial.Graphic3d_MATERIAL_ASPECT
Graphic3d_MATERIAL_PHYSIC = Graphic3d_TypeOfMaterial.Graphic3d_MATERIAL_PHYSIC

class Graphic3d_TypeOfBackfacingModel(IntEnum):
	Graphic3d_TOBM_AUTOMATIC: int = ...
	Graphic3d_TOBM_FORCE: int = ...
	Graphic3d_TOBM_DISABLE: int = ...
Graphic3d_TOBM_AUTOMATIC = Graphic3d_TypeOfBackfacingModel.Graphic3d_TOBM_AUTOMATIC
Graphic3d_TOBM_FORCE = Graphic3d_TypeOfBackfacingModel.Graphic3d_TOBM_FORCE
Graphic3d_TOBM_DISABLE = Graphic3d_TypeOfBackfacingModel.Graphic3d_TOBM_DISABLE

class Graphic3d_HorizontalTextAlignment(IntEnum):
	Graphic3d_HTA_LEFT: int = ...
	Graphic3d_HTA_CENTER: int = ...
	Graphic3d_HTA_RIGHT: int = ...
Graphic3d_HTA_LEFT = Graphic3d_HorizontalTextAlignment.Graphic3d_HTA_LEFT
Graphic3d_HTA_CENTER = Graphic3d_HorizontalTextAlignment.Graphic3d_HTA_CENTER
Graphic3d_HTA_RIGHT = Graphic3d_HorizontalTextAlignment.Graphic3d_HTA_RIGHT

class Graphic3d_TransModeFlags(IntEnum):
	Graphic3d_TMF_None: int = ...
	Graphic3d_TMF_ZoomPers: int = ...
	Graphic3d_TMF_RotatePers: int = ...
	Graphic3d_TMF_TriedronPers: int = ...
	Graphic3d_TMF_2d: int = ...
	Graphic3d_TMF_ZoomRotatePers: int = ...
Graphic3d_TMF_None = Graphic3d_TransModeFlags.Graphic3d_TMF_None
Graphic3d_TMF_ZoomPers = Graphic3d_TransModeFlags.Graphic3d_TMF_ZoomPers
Graphic3d_TMF_RotatePers = Graphic3d_TransModeFlags.Graphic3d_TMF_RotatePers
Graphic3d_TMF_TriedronPers = Graphic3d_TransModeFlags.Graphic3d_TMF_TriedronPers
Graphic3d_TMF_2d = Graphic3d_TransModeFlags.Graphic3d_TMF_2d
Graphic3d_TMF_ZoomRotatePers = Graphic3d_TransModeFlags.Graphic3d_TMF_ZoomRotatePers
Graphic3d_ArrayFlags_None = .Graphic3d_ArrayFlags_None
Graphic3d_ArrayFlags_VertexNormal = .Graphic3d_ArrayFlags_VertexNormal
Graphic3d_ArrayFlags_VertexColor = .Graphic3d_ArrayFlags_VertexColor
Graphic3d_ArrayFlags_VertexTexel = .Graphic3d_ArrayFlags_VertexTexel
Graphic3d_ArrayFlags_BoundColor = .Graphic3d_ArrayFlags_BoundColor
Graphic3d_ArrayFlags_AttribsMutable = .Graphic3d_ArrayFlags_AttribsMutable
Graphic3d_ArrayFlags_AttribsDeinterleaved = .Graphic3d_ArrayFlags_AttribsDeinterleaved
Graphic3d_ArrayFlags_IndexesMutable = .Graphic3d_ArrayFlags_IndexesMutable

class Graphic3d_TypeOfAnswer(IntEnum):
	Graphic3d_TOA_YES: int = ...
	Graphic3d_TOA_NO: int = ...
	Graphic3d_TOA_COMPUTE: int = ...
Graphic3d_TOA_YES = Graphic3d_TypeOfAnswer.Graphic3d_TOA_YES
Graphic3d_TOA_NO = Graphic3d_TypeOfAnswer.Graphic3d_TOA_NO
Graphic3d_TOA_COMPUTE = Graphic3d_TypeOfAnswer.Graphic3d_TOA_COMPUTE

class Graphic3d_GroupAspect(IntEnum):
	Graphic3d_ASPECT_LINE: int = ...
	Graphic3d_ASPECT_TEXT: int = ...
	Graphic3d_ASPECT_MARKER: int = ...
	Graphic3d_ASPECT_FILL_AREA: int = ...
Graphic3d_ASPECT_LINE = Graphic3d_GroupAspect.Graphic3d_ASPECT_LINE
Graphic3d_ASPECT_TEXT = Graphic3d_GroupAspect.Graphic3d_ASPECT_TEXT
Graphic3d_ASPECT_MARKER = Graphic3d_GroupAspect.Graphic3d_ASPECT_MARKER
Graphic3d_ASPECT_FILL_AREA = Graphic3d_GroupAspect.Graphic3d_ASPECT_FILL_AREA

class Graphic3d_TextureUnit(IntEnum):
	Graphic3d_TextureUnit_0: int = ...
	Graphic3d_TextureUnit_1: int = ...
	Graphic3d_TextureUnit_2: int = ...
	Graphic3d_TextureUnit_3: int = ...
	Graphic3d_TextureUnit_4: int = ...
	Graphic3d_TextureUnit_5: int = ...
	Graphic3d_TextureUnit_6: int = ...
	Graphic3d_TextureUnit_7: int = ...
	Graphic3d_TextureUnit_8: int = ...
	Graphic3d_TextureUnit_9: int = ...
	Graphic3d_TextureUnit_10: int = ...
	Graphic3d_TextureUnit_11: int = ...
	Graphic3d_TextureUnit_12: int = ...
	Graphic3d_TextureUnit_13: int = ...
	Graphic3d_TextureUnit_14: int = ...
	Graphic3d_TextureUnit_15: int = ...
	Graphic3d_TextureUnit_BaseColor: int = ...
	Graphic3d_TextureUnit_EnvMap: int = ...
Graphic3d_TextureUnit_0 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_0
Graphic3d_TextureUnit_1 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_1
Graphic3d_TextureUnit_2 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_2
Graphic3d_TextureUnit_3 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_3
Graphic3d_TextureUnit_4 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_4
Graphic3d_TextureUnit_5 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_5
Graphic3d_TextureUnit_6 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_6
Graphic3d_TextureUnit_7 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_7
Graphic3d_TextureUnit_8 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_8
Graphic3d_TextureUnit_9 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_9
Graphic3d_TextureUnit_10 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_10
Graphic3d_TextureUnit_11 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_11
Graphic3d_TextureUnit_12 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_12
Graphic3d_TextureUnit_13 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_13
Graphic3d_TextureUnit_14 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_14
Graphic3d_TextureUnit_15 = Graphic3d_TextureUnit.Graphic3d_TextureUnit_15
Graphic3d_TextureUnit_BaseColor = Graphic3d_TextureUnit.Graphic3d_TextureUnit_BaseColor
Graphic3d_TextureUnit_EnvMap = Graphic3d_TextureUnit.Graphic3d_TextureUnit_EnvMap
Graphic3d_TextureUnit_NB = .Graphic3d_TextureUnit_NB

class Graphic3d_TypeOfConnection(IntEnum):
	Graphic3d_TOC_ANCESTOR: int = ...
	Graphic3d_TOC_DESCENDANT: int = ...
Graphic3d_TOC_ANCESTOR = Graphic3d_TypeOfConnection.Graphic3d_TOC_ANCESTOR
Graphic3d_TOC_DESCENDANT = Graphic3d_TypeOfConnection.Graphic3d_TOC_DESCENDANT

class Graphic3d_NameOfTexture1D(IntEnum):
	Graphic3d_NOT_1D_ELEVATION: int = ...
	Graphic3d_NOT_1D_UNKNOWN: int = ...
Graphic3d_NOT_1D_ELEVATION = Graphic3d_NameOfTexture1D.Graphic3d_NOT_1D_ELEVATION
Graphic3d_NOT_1D_UNKNOWN = Graphic3d_NameOfTexture1D.Graphic3d_NOT_1D_UNKNOWN

class Graphic3d_TextPath(IntEnum):
	Graphic3d_TP_UP: int = ...
	Graphic3d_TP_DOWN: int = ...
	Graphic3d_TP_LEFT: int = ...
	Graphic3d_TP_RIGHT: int = ...
Graphic3d_TP_UP = Graphic3d_TextPath.Graphic3d_TP_UP
Graphic3d_TP_DOWN = Graphic3d_TextPath.Graphic3d_TP_DOWN
Graphic3d_TP_LEFT = Graphic3d_TextPath.Graphic3d_TP_LEFT
Graphic3d_TP_RIGHT = Graphic3d_TextPath.Graphic3d_TP_RIGHT

class Graphic3d_CubeMapSide(IntEnum):
	Graphic3d_CMS_POS_X: int = ...
	Graphic3d_CMS_NEG_X: int = ...
	Graphic3d_CMS_POS_Y: int = ...
	Graphic3d_CMS_NEG_Y: int = ...
	Graphic3d_CMS_POS_Z: int = ...
	Graphic3d_CMS_NEG_Z: int = ...
Graphic3d_CMS_POS_X = Graphic3d_CubeMapSide.Graphic3d_CMS_POS_X
Graphic3d_CMS_NEG_X = Graphic3d_CubeMapSide.Graphic3d_CMS_NEG_X
Graphic3d_CMS_POS_Y = Graphic3d_CubeMapSide.Graphic3d_CMS_POS_Y
Graphic3d_CMS_NEG_Y = Graphic3d_CubeMapSide.Graphic3d_CMS_NEG_Y
Graphic3d_CMS_POS_Z = Graphic3d_CubeMapSide.Graphic3d_CMS_POS_Z
Graphic3d_CMS_NEG_Z = Graphic3d_CubeMapSide.Graphic3d_CMS_NEG_Z
Graphic3d_ZLayerId_UNKNOWN = .Graphic3d_ZLayerId_UNKNOWN
Graphic3d_ZLayerId_Default = .Graphic3d_ZLayerId_Default
Graphic3d_ZLayerId_Top = .Graphic3d_ZLayerId_Top
Graphic3d_ZLayerId_Topmost = .Graphic3d_ZLayerId_Topmost
Graphic3d_ZLayerId_TopOSD = .Graphic3d_ZLayerId_TopOSD
Graphic3d_ZLayerId_BotOSD = .Graphic3d_ZLayerId_BotOSD

class Graphic3d_TypeOfComposition(IntEnum):
	Graphic3d_TOC_REPLACE: int = ...
	Graphic3d_TOC_POSTCONCATENATE: int = ...
Graphic3d_TOC_REPLACE = Graphic3d_TypeOfComposition.Graphic3d_TOC_REPLACE
Graphic3d_TOC_POSTCONCATENATE = Graphic3d_TypeOfComposition.Graphic3d_TOC_POSTCONCATENATE

class Graphic3d_TypeOfAttribute(IntEnum):
	Graphic3d_TOA_POS: int = ...
	Graphic3d_TOA_NORM: int = ...
	Graphic3d_TOA_UV: int = ...
	Graphic3d_TOA_COLOR: int = ...
	Graphic3d_TOA_CUSTOM: int = ...
Graphic3d_TOA_POS = Graphic3d_TypeOfAttribute.Graphic3d_TOA_POS
Graphic3d_TOA_NORM = Graphic3d_TypeOfAttribute.Graphic3d_TOA_NORM
Graphic3d_TOA_UV = Graphic3d_TypeOfAttribute.Graphic3d_TOA_UV
Graphic3d_TOA_COLOR = Graphic3d_TypeOfAttribute.Graphic3d_TOA_COLOR
Graphic3d_TOA_CUSTOM = Graphic3d_TypeOfAttribute.Graphic3d_TOA_CUSTOM

class Graphic3d_TypeOfData(IntEnum):
	Graphic3d_TOD_USHORT: int = ...
	Graphic3d_TOD_UINT: int = ...
	Graphic3d_TOD_VEC2: int = ...
	Graphic3d_TOD_VEC3: int = ...
	Graphic3d_TOD_VEC4: int = ...
	Graphic3d_TOD_VEC4UB: int = ...
	Graphic3d_TOD_FLOAT: int = ...
Graphic3d_TOD_USHORT = Graphic3d_TypeOfData.Graphic3d_TOD_USHORT
Graphic3d_TOD_UINT = Graphic3d_TypeOfData.Graphic3d_TOD_UINT
Graphic3d_TOD_VEC2 = Graphic3d_TypeOfData.Graphic3d_TOD_VEC2
Graphic3d_TOD_VEC3 = Graphic3d_TypeOfData.Graphic3d_TOD_VEC3
Graphic3d_TOD_VEC4 = Graphic3d_TypeOfData.Graphic3d_TOD_VEC4
Graphic3d_TOD_VEC4UB = Graphic3d_TypeOfData.Graphic3d_TOD_VEC4UB
Graphic3d_TOD_FLOAT = Graphic3d_TypeOfData.Graphic3d_TOD_FLOAT

class Graphic3d_NameOfTexture2D(IntEnum):
	Graphic3d_NOT_2D_MATRA: int = ...
	Graphic3d_NOT_2D_ALIENSKIN: int = ...
	Graphic3d_NOT_2D_BLUE_ROCK: int = ...
	Graphic3d_NOT_2D_BLUEWHITE_PAPER: int = ...
	Graphic3d_NOT_2D_BRUSHED: int = ...
	Graphic3d_NOT_2D_BUBBLES: int = ...
	Graphic3d_NOT_2D_BUMP: int = ...
	Graphic3d_NOT_2D_CAST: int = ...
	Graphic3d_NOT_2D_CHIPBD: int = ...
	Graphic3d_NOT_2D_CLOUDS: int = ...
	Graphic3d_NOT_2D_FLESH: int = ...
	Graphic3d_NOT_2D_FLOOR: int = ...
	Graphic3d_NOT_2D_GALVNISD: int = ...
	Graphic3d_NOT_2D_GRASS: int = ...
	Graphic3d_NOT_2D_ALUMINUM: int = ...
	Graphic3d_NOT_2D_ROCK: int = ...
	Graphic3d_NOT_2D_KNURL: int = ...
	Graphic3d_NOT_2D_MAPLE: int = ...
	Graphic3d_NOT_2D_MARBLE: int = ...
	Graphic3d_NOT_2D_MOTTLED: int = ...
	Graphic3d_NOT_2D_RAIN: int = ...
	Graphic3d_NOT_2D_CHESS: int = ...
	Graphic3d_NOT_2D_UNKNOWN: int = ...
Graphic3d_NOT_2D_MATRA = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_MATRA
Graphic3d_NOT_2D_ALIENSKIN = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_ALIENSKIN
Graphic3d_NOT_2D_BLUE_ROCK = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_BLUE_ROCK
Graphic3d_NOT_2D_BLUEWHITE_PAPER = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_BLUEWHITE_PAPER
Graphic3d_NOT_2D_BRUSHED = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_BRUSHED
Graphic3d_NOT_2D_BUBBLES = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_BUBBLES
Graphic3d_NOT_2D_BUMP = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_BUMP
Graphic3d_NOT_2D_CAST = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_CAST
Graphic3d_NOT_2D_CHIPBD = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_CHIPBD
Graphic3d_NOT_2D_CLOUDS = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_CLOUDS
Graphic3d_NOT_2D_FLESH = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_FLESH
Graphic3d_NOT_2D_FLOOR = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_FLOOR
Graphic3d_NOT_2D_GALVNISD = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_GALVNISD
Graphic3d_NOT_2D_GRASS = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_GRASS
Graphic3d_NOT_2D_ALUMINUM = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_ALUMINUM
Graphic3d_NOT_2D_ROCK = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_ROCK
Graphic3d_NOT_2D_KNURL = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_KNURL
Graphic3d_NOT_2D_MAPLE = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_MAPLE
Graphic3d_NOT_2D_MARBLE = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_MARBLE
Graphic3d_NOT_2D_MOTTLED = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_MOTTLED
Graphic3d_NOT_2D_RAIN = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_RAIN
Graphic3d_NOT_2D_CHESS = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_CHESS
Graphic3d_NOT_2D_UNKNOWN = Graphic3d_NameOfTexture2D.Graphic3d_NOT_2D_UNKNOWN

class Graphic3d_NameOfMaterial(IntEnum):
	Graphic3d_NOM_BRASS: int = ...
	Graphic3d_NOM_BRONZE: int = ...
	Graphic3d_NOM_COPPER: int = ...
	Graphic3d_NOM_GOLD: int = ...
	Graphic3d_NOM_PEWTER: int = ...
	Graphic3d_NOM_PLASTER: int = ...
	Graphic3d_NOM_PLASTIC: int = ...
	Graphic3d_NOM_SILVER: int = ...
	Graphic3d_NOM_STEEL: int = ...
	Graphic3d_NOM_STONE: int = ...
	Graphic3d_NOM_SHINY_PLASTIC: int = ...
	Graphic3d_NOM_SATIN: int = ...
	Graphic3d_NOM_METALIZED: int = ...
	Graphic3d_NOM_NEON_GNC: int = ...
	Graphic3d_NOM_CHROME: int = ...
	Graphic3d_NOM_ALUMINIUM: int = ...
	Graphic3d_NOM_OBSIDIAN: int = ...
	Graphic3d_NOM_NEON_PHC: int = ...
	Graphic3d_NOM_JADE: int = ...
	Graphic3d_NOM_CHARCOAL: int = ...
	Graphic3d_NOM_WATER: int = ...
	Graphic3d_NOM_GLASS: int = ...
	Graphic3d_NOM_DIAMOND: int = ...
	Graphic3d_NOM_TRANSPARENT: int = ...
	Graphic3d_NOM_DEFAULT: int = ...
	Graphic3d_NOM_UserDefined: int = ...
Graphic3d_NOM_BRASS = Graphic3d_NameOfMaterial.Graphic3d_NOM_BRASS
Graphic3d_NOM_BRONZE = Graphic3d_NameOfMaterial.Graphic3d_NOM_BRONZE
Graphic3d_NOM_COPPER = Graphic3d_NameOfMaterial.Graphic3d_NOM_COPPER
Graphic3d_NOM_GOLD = Graphic3d_NameOfMaterial.Graphic3d_NOM_GOLD
Graphic3d_NOM_PEWTER = Graphic3d_NameOfMaterial.Graphic3d_NOM_PEWTER
Graphic3d_NOM_PLASTER = Graphic3d_NameOfMaterial.Graphic3d_NOM_PLASTER
Graphic3d_NOM_PLASTIC = Graphic3d_NameOfMaterial.Graphic3d_NOM_PLASTIC
Graphic3d_NOM_SILVER = Graphic3d_NameOfMaterial.Graphic3d_NOM_SILVER
Graphic3d_NOM_STEEL = Graphic3d_NameOfMaterial.Graphic3d_NOM_STEEL
Graphic3d_NOM_STONE = Graphic3d_NameOfMaterial.Graphic3d_NOM_STONE
Graphic3d_NOM_SHINY_PLASTIC = Graphic3d_NameOfMaterial.Graphic3d_NOM_SHINY_PLASTIC
Graphic3d_NOM_SATIN = Graphic3d_NameOfMaterial.Graphic3d_NOM_SATIN
Graphic3d_NOM_METALIZED = Graphic3d_NameOfMaterial.Graphic3d_NOM_METALIZED
Graphic3d_NOM_NEON_GNC = Graphic3d_NameOfMaterial.Graphic3d_NOM_NEON_GNC
Graphic3d_NOM_CHROME = Graphic3d_NameOfMaterial.Graphic3d_NOM_CHROME
Graphic3d_NOM_ALUMINIUM = Graphic3d_NameOfMaterial.Graphic3d_NOM_ALUMINIUM
Graphic3d_NOM_OBSIDIAN = Graphic3d_NameOfMaterial.Graphic3d_NOM_OBSIDIAN
Graphic3d_NOM_NEON_PHC = Graphic3d_NameOfMaterial.Graphic3d_NOM_NEON_PHC
Graphic3d_NOM_JADE = Graphic3d_NameOfMaterial.Graphic3d_NOM_JADE
Graphic3d_NOM_CHARCOAL = Graphic3d_NameOfMaterial.Graphic3d_NOM_CHARCOAL
Graphic3d_NOM_WATER = Graphic3d_NameOfMaterial.Graphic3d_NOM_WATER
Graphic3d_NOM_GLASS = Graphic3d_NameOfMaterial.Graphic3d_NOM_GLASS
Graphic3d_NOM_DIAMOND = Graphic3d_NameOfMaterial.Graphic3d_NOM_DIAMOND
Graphic3d_NOM_TRANSPARENT = Graphic3d_NameOfMaterial.Graphic3d_NOM_TRANSPARENT
Graphic3d_NOM_DEFAULT = Graphic3d_NameOfMaterial.Graphic3d_NOM_DEFAULT
Graphic3d_NOM_UserDefined = Graphic3d_NameOfMaterial.Graphic3d_NOM_UserDefined

class Graphic3d_TypeOfTextureFilter(IntEnum):
	Graphic3d_TOTF_NEAREST: int = ...
	Graphic3d_TOTF_BILINEAR: int = ...
	Graphic3d_TOTF_TRILINEAR: int = ...
Graphic3d_TOTF_NEAREST = Graphic3d_TypeOfTextureFilter.Graphic3d_TOTF_NEAREST
Graphic3d_TOTF_BILINEAR = Graphic3d_TypeOfTextureFilter.Graphic3d_TOTF_BILINEAR
Graphic3d_TOTF_TRILINEAR = Graphic3d_TypeOfTextureFilter.Graphic3d_TOTF_TRILINEAR

class Graphic3d_TypeOfVisualization(IntEnum):
	Graphic3d_TOV_WIREFRAME: int = ...
	Graphic3d_TOV_SHADING: int = ...
Graphic3d_TOV_WIREFRAME = Graphic3d_TypeOfVisualization.Graphic3d_TOV_WIREFRAME
Graphic3d_TOV_SHADING = Graphic3d_TypeOfVisualization.Graphic3d_TOV_SHADING

class Graphic3d_TypeOfLightSource(IntEnum):
	Graphic3d_TOLS_AMBIENT: int = ...
	Graphic3d_TOLS_DIRECTIONAL: int = ...
	Graphic3d_TOLS_POSITIONAL: int = ...
	Graphic3d_TOLS_SPOT: int = ...
	V3d_AMBIENT: int = ...
	V3d_DIRECTIONAL: int = ...
	V3d_POSITIONAL: int = ...
	V3d_SPOT: int = ...
Graphic3d_TOLS_AMBIENT = Graphic3d_TypeOfLightSource.Graphic3d_TOLS_AMBIENT
Graphic3d_TOLS_DIRECTIONAL = Graphic3d_TypeOfLightSource.Graphic3d_TOLS_DIRECTIONAL
Graphic3d_TOLS_POSITIONAL = Graphic3d_TypeOfLightSource.Graphic3d_TOLS_POSITIONAL
Graphic3d_TOLS_SPOT = Graphic3d_TypeOfLightSource.Graphic3d_TOLS_SPOT
V3d_AMBIENT = Graphic3d_TypeOfLightSource.V3d_AMBIENT
V3d_DIRECTIONAL = Graphic3d_TypeOfLightSource.V3d_DIRECTIONAL
V3d_POSITIONAL = Graphic3d_TypeOfLightSource.V3d_POSITIONAL
V3d_SPOT = Graphic3d_TypeOfLightSource.V3d_SPOT
Graphic3d_TypeOfLightSource_NB = .Graphic3d_TypeOfLightSource_NB

class Graphic3d_NameOfTextureEnv(IntEnum):
	Graphic3d_NOT_ENV_CLOUDS: int = ...
	Graphic3d_NOT_ENV_CV: int = ...
	Graphic3d_NOT_ENV_MEDIT: int = ...
	Graphic3d_NOT_ENV_PEARL: int = ...
	Graphic3d_NOT_ENV_SKY1: int = ...
	Graphic3d_NOT_ENV_SKY2: int = ...
	Graphic3d_NOT_ENV_LINES: int = ...
	Graphic3d_NOT_ENV_ROAD: int = ...
	Graphic3d_NOT_ENV_UNKNOWN: int = ...
Graphic3d_NOT_ENV_CLOUDS = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_CLOUDS
Graphic3d_NOT_ENV_CV = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_CV
Graphic3d_NOT_ENV_MEDIT = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_MEDIT
Graphic3d_NOT_ENV_PEARL = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_PEARL
Graphic3d_NOT_ENV_SKY1 = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_SKY1
Graphic3d_NOT_ENV_SKY2 = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_SKY2
Graphic3d_NOT_ENV_LINES = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_LINES
Graphic3d_NOT_ENV_ROAD = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_ROAD
Graphic3d_NOT_ENV_UNKNOWN = Graphic3d_NameOfTextureEnv.Graphic3d_NOT_ENV_UNKNOWN

class Graphic3d_ArrayOfPrimitives(Standard_Transient):
	def AddBound(self, theEdgeNumber: int) -> int: ...
	def AddBound(self, theEdgeNumber: int, theBColor: Quantity_Color) -> int: ...
	def AddBound(self, theEdgeNumber: int, theR: float, theG: float, theB: float) -> int: ...
	def AddEdge(self, theVertexIndex: int) -> int: ...
	def AddEdges(self, theVertexIndex1: int, theVertexIndex2: int) -> int: ...
	def AddEdges(self, theVertexIndex1: int, theVertexIndex2: int, theVertexIndex3: int) -> int: ...
	def AddEdges(self, theVertexIndex1: int, theVertexIndex2: int, theVertexIndex3: int, theVertexIndex4: int) -> int: ...
	def AddPolylineEdges(self, theVertexLower: int, theVertexUpper: int, theToClose: bool) -> None: ...
	def AddQuadEdges(self, theVertexIndex1: int, theVertexIndex2: int, theVertexIndex3: int, theVertexIndex4: int) -> int: ...
	def AddQuadTriangleEdges(self, theVertexIndex1: int, theVertexIndex2: int, theVertexIndex3: int, theVertexIndex4: int) -> int: ...
	def AddQuadTriangleEdges(self, theIndexes: Graphic3d_Vec4i) -> int: ...
	def AddSegmentEdges(self, theVertexIndex1: int, theVertexIndex2: int) -> int: ...
	def AddTriangleEdges(self, theVertexIndex1: int, theVertexIndex2: int, theVertexIndex3: int) -> int: ...
	def AddTriangleEdges(self, theIndexes: Graphic3d_Vec3i) -> int: ...
	def AddTriangleEdges(self, theIndexes: Graphic3d_Vec4i) -> int: ...
	def AddTriangleFanEdges(self, theVertexLower: int, theVertexUpper: int, theToClose: bool) -> None: ...
	def AddTriangleStripEdges(self, theVertexLower: int, theVertexUpper: int) -> None: ...
	def AddVertex(self, theVertex: gp_Pnt) -> int: ...
	def AddVertex(self, theVertex: Graphic3d_Vec3) -> int: ...
	def AddVertex(self, theX: float, theY: float, theZ: float) -> int: ...
	def AddVertex(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theColor: Quantity_Color) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theColor32: int) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theColor: Graphic3d_Vec4ub) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theNormal: gp_Dir) -> int: ...
	def AddVertex(self, theX: float, theY: float, theZ: float, theNX: float, theNY: float, theNZ: float) -> int: ...
	def AddVertex(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal, theNX: Standard_ShortReal, theNY: Standard_ShortReal, theNZ: Standard_ShortReal) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theNormal: gp_Dir, theColor: Quantity_Color) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theNormal: gp_Dir, theColor32: int) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theTexel: gp_Pnt2d) -> int: ...
	def AddVertex(self, theX: float, theY: float, theZ: float, theTX: float, theTY: float) -> int: ...
	def AddVertex(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal, theTX: Standard_ShortReal, theTY: Standard_ShortReal) -> int: ...
	def AddVertex(self, theVertex: gp_Pnt, theNormal: gp_Dir, theTexel: gp_Pnt2d) -> int: ...
	def AddVertex(self, theX: float, theY: float, theZ: float, theNX: float, theNY: float, theNZ: float, theTX: float, theTY: float) -> int: ...
	def AddVertex(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal, theNX: Standard_ShortReal, theNY: Standard_ShortReal, theNZ: Standard_ShortReal, theTX: Standard_ShortReal, theTY: Standard_ShortReal) -> int: ...
	def Attributes(self) -> Graphic3d_Buffer: ...
	def Bound(self, theRank: int) -> int: ...
	def BoundColor(self, theRank: int) -> Quantity_Color: ...
	def BoundColor(self, theRank: int) -> Tuple[float, float, float]: ...
	def BoundNumber(self) -> int: ...
	def BoundNumberAllocated(self) -> int: ...
	def Bounds(self) -> Graphic3d_BoundBuffer: ...
	def Edge(self, theRank: int) -> int: ...
	def EdgeNumber(self) -> int: ...
	def EdgeNumberAllocated(self) -> int: ...
	def HasBoundColors(self) -> bool: ...
	def HasVertexColors(self) -> bool: ...
	def HasVertexNormals(self) -> bool: ...
	def HasVertexTexels(self) -> bool: ...
	def Indices(self) -> Graphic3d_IndexBuffer: ...
	def IsValid(self) -> bool: ...
	def ItemNumber(self) -> int: ...
	def SetBoundColor(self, theIndex: int, theColor: Quantity_Color) -> None: ...
	def SetBoundColor(self, theIndex: int, theR: float, theG: float, theB: float) -> None: ...
	def SetVertexColor(self, theIndex: int, theColor: Quantity_Color) -> None: ...
	def SetVertexColor(self, theIndex: int, theR: float, theG: float, theB: float) -> None: ...
	def SetVertexColor(self, theIndex: int, theColor: Graphic3d_Vec4ub) -> None: ...
	def SetVertexColor(self, theIndex: int, theColor32: int) -> None: ...
	def SetVertexNormal(self, theIndex: int, theNormal: gp_Dir) -> None: ...
	def SetVertexNormal(self, theIndex: int, theNX: float, theNY: float, theNZ: float) -> None: ...
	def SetVertexTexel(self, theIndex: int, theTexel: gp_Pnt2d) -> None: ...
	def SetVertexTexel(self, theIndex: int, theTX: float, theTY: float) -> None: ...
	def SetVertice(self, theIndex: int, theVertex: gp_Pnt) -> None: ...
	def SetVertice(self, theIndex: int, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal) -> None: ...
	def StringType(self) -> str: ...
	def Type(self) -> Graphic3d_TypeOfPrimitiveArray: ...
	def VertexColor(self, theRank: int) -> Quantity_Color: ...
	def VertexColor(self, theIndex: int, theColor: Graphic3d_Vec4ub) -> None: ...
	def VertexColor(self, theRank: int) -> Tuple[float, float, float]: ...
	def VertexColor(self, theRank: int) -> int: ...
	def VertexNormal(self, theRank: int) -> gp_Dir: ...
	def VertexNormal(self, theRank: int) -> Tuple[float, float, float]: ...
	def VertexNumber(self) -> int: ...
	def VertexNumberAllocated(self) -> int: ...
	def VertexTexel(self, theRank: int) -> gp_Pnt2d: ...
	def VertexTexel(self, theRank: int) -> Tuple[float, float]: ...
	def Vertice(self, theRank: int) -> gp_Pnt: ...
	def Vertice(self, theRank: int) -> Tuple[float, float, float]: ...

class Graphic3d_Aspects(Standard_Transient):
	def __init__(self) -> None: ...
	def AllowBackFace(self) -> None: ...
	def AlphaCutoff(self) -> Standard_ShortReal: ...
	def AlphaMode(self) -> Graphic3d_AlphaMode: ...
	def BackFace(self) -> False: ...
	def BackInteriorColor(self) -> Quantity_Color: ...
	def BackInteriorColorRGBA(self) -> Quantity_ColorRGBA: ...
	def BackMaterial(self) -> Graphic3d_MaterialAspect: ...
	def ChangeBackMaterial(self) -> Graphic3d_MaterialAspect: ...
	def ChangeFrontMaterial(self) -> Graphic3d_MaterialAspect: ...
	def Color(self) -> Quantity_Color: ...
	def ColorRGBA(self) -> Quantity_ColorRGBA: ...
	def ColorSubTitle(self) -> Quantity_Color: ...
	def ColorSubTitleRGBA(self) -> Quantity_ColorRGBA: ...
	def Distinguish(self) -> False: ...
	def EdgeColor(self) -> Quantity_Color: ...
	def EdgeColorRGBA(self) -> Quantity_ColorRGBA: ...
	def EdgeLineType(self) -> Aspect_TypeOfLine: ...
	def EdgeWidth(self) -> Standard_ShortReal: ...
	def FrontMaterial(self) -> Graphic3d_MaterialAspect: ...
	def HatchStyle(self) -> Graphic3d_HatchStyle: ...
	def InteriorColor(self) -> Quantity_Color: ...
	def InteriorColorRGBA(self) -> Quantity_ColorRGBA: ...
	def InteriorStyle(self) -> Aspect_InteriorStyle: ...
	def IsEqual(self, theOther: Graphic3d_Aspects) -> False: ...
	def IsMarkerSprite(self) -> False: ...
	def IsTextZoomable(self) -> False: ...
	def LineType(self) -> Aspect_TypeOfLine: ...
	def LineWidth(self) -> Standard_ShortReal: ...
	def MarkerImage(self) -> Graphic3d_MarkerImage: ...
	def MarkerScale(self) -> Standard_ShortReal: ...
	def MarkerType(self) -> Aspect_TypeOfMarker: ...
	def PolygonOffset(self) -> Graphic3d_PolygonOffset: ...
	def PolygonOffsets(self, theFactor: Standard_ShortReal, theUnits: Standard_ShortReal) -> int: ...
	def SetAlphaMode(self, theMode: Graphic3d_AlphaMode, theAlphaCutoff: Optional[Standard_ShortReal]) -> None: ...
	def SetBackInteriorColor(self, theColor: Quantity_Color) -> None: ...
	def SetBackInteriorColor(self, theColor: Quantity_ColorRGBA) -> None: ...
	def SetBackMaterial(self, theMaterial: Graphic3d_MaterialAspect) -> None: ...
	def SetColor(self, theColor: Quantity_Color) -> None: ...
	def SetColorSubTitle(self, theColor: Quantity_Color) -> None: ...
	def SetColorSubTitle(self, theColor: Quantity_ColorRGBA) -> None: ...
	def SetDistinguishOff(self) -> None: ...
	def SetDistinguishOn(self) -> None: ...
	def SetEdgeColor(self, theColor: Quantity_Color) -> None: ...
	def SetEdgeColor(self, theColor: Quantity_ColorRGBA) -> None: ...
	def SetEdgeLineType(self, theType: Aspect_TypeOfLine) -> None: ...
	def SetEdgeOff(self) -> None: ...
	def SetEdgeOn(self) -> None: ...
	def SetEdgeWidth(self, theWidth: float) -> None: ...
	def SetFrontMaterial(self, theMaterial: Graphic3d_MaterialAspect) -> None: ...
	def SetHatchStyle(self, theStyle: Graphic3d_HatchStyle) -> None: ...
	def SetHatchStyle(self, theStyle: Aspect_HatchStyle) -> None: ...
	def SetInteriorColor(self, theColor: Quantity_Color) -> None: ...
	def SetInteriorColor(self, theColor: Quantity_ColorRGBA) -> None: ...
	def SetInteriorStyle(self, theStyle: Aspect_InteriorStyle) -> None: ...
	def SetLineType(self, theType: Aspect_TypeOfLine) -> None: ...
	def SetLineWidth(self, theWidth: Standard_ShortReal) -> None: ...
	def SetMarkerImage(self, theImage: Graphic3d_MarkerImage) -> None: ...
	def SetMarkerScale(self, theScale: Standard_ShortReal) -> None: ...
	def SetMarkerType(self, theType: Aspect_TypeOfMarker) -> None: ...
	def SetPolygonOffset(self, theOffset: Graphic3d_PolygonOffset) -> None: ...
	def SetPolygonOffsets(self, theMode: int, theFactor: Optional[Standard_ShortReal], theUnits: Optional[Standard_ShortReal]) -> None: ...
	def SetShaderProgram(self, theProgram: Graphic3d_ShaderProgram) -> None: ...
	def SetShadingModel(self, theShadingModel: Graphic3d_TypeOfShadingModel) -> None: ...
	def SetTextAngle(self, theAngle: Standard_ShortReal) -> None: ...
	def SetTextDisplayType(self, theType: Aspect_TypeOfDisplayText) -> None: ...
	def SetTextFont(self, theFont: TCollection_HAsciiString) -> None: ...
	def SetTextStyle(self, theStyle: Aspect_TypeOfStyleText) -> None: ...
	def SetTextureMap(self, theTexture: Graphic3d_TextureMap) -> None: ...
	def SetTextureMapOff(self) -> None: ...
	def SetTextureMapOn(self) -> None: ...
	def SetTextureSet(self, theTextures: Graphic3d_TextureSet) -> None: ...
	def ShaderProgram(self) -> Graphic3d_ShaderProgram: ...
	def ShadingModel(self) -> Graphic3d_TypeOfShadingModel: ...
	def SuppressBackFace(self) -> None: ...
	def TextAngle(self) -> Standard_ShortReal: ...
	def TextDisplayType(self) -> Aspect_TypeOfDisplayText: ...
	def TextFont(self) -> TCollection_HAsciiString: ...
	def TextFontAspect(self) -> False: ...
	def TextStyle(self) -> Aspect_TypeOfStyleText: ...
	def TextureMap(self) -> Graphic3d_TextureMap: ...
	def TextureMapState(self) -> False: ...
	def TextureSet(self) -> Graphic3d_TextureSet: ...
	def ToDrawEdges(self) -> False: ...
	def ToDrawSilhouette(self) -> False: ...
	def ToMapTexture(self) -> False: ...
	def ToSkipFirstEdge(self) -> False: ...
	def ToSuppressBackFaces(self) -> False: ...

class Graphic3d_Attribute:
	def Stride(self) -> int: ...
	@staticmethod
	def Stride(self, theType: Graphic3d_TypeOfData) -> int: ...

class Graphic3d_AxisAspect:
	def __init__(self, theName: Optional[TCollection_ExtendedString], theNameColor: Optional[Quantity_Color], theColor: Optional[Quantity_Color], theValuesOffset: Optional[int], theNameOffset: Optional[int], theTickmarksNumber: Optional[int], theTickmarksLength: Optional[int], theToDrawName: Optional[bool], theToDrawValues: Optional[bool], theToDrawTickmarks: Optional[bool]) -> None: ...
	def Color(self) -> Quantity_Color: ...
	def Name(self) -> TCollection_ExtendedString: ...
	def NameColor(self) -> Quantity_Color: ...
	def NameOffset(self) -> int: ...
	def SetColor(self, theColor: Quantity_Color) -> None: ...
	def SetDrawName(self, theToDraw: bool) -> None: ...
	def SetDrawTickmarks(self, theToDraw: bool) -> None: ...
	def SetDrawValues(self, theToDraw: bool) -> None: ...
	def SetName(self, theName: TCollection_ExtendedString) -> None: ...
	def SetNameColor(self, theColor: Quantity_Color) -> None: ...
	def SetNameOffset(self, theValue: int) -> None: ...
	def SetTickmarksLength(self, theValue: int) -> None: ...
	def SetTickmarksNumber(self, theValue: int) -> None: ...
	def SetValuesOffset(self, theValue: int) -> None: ...
	def TickmarksLength(self) -> int: ...
	def TickmarksNumber(self) -> int: ...
	def ToDrawName(self) -> bool: ...
	def ToDrawTickmarks(self) -> bool: ...
	def ToDrawValues(self) -> bool: ...
	def ValuesOffset(self) -> int: ...

class Graphic3d_BSDF:
	def __init__(self) -> None: ...
	@staticmethod
	def CreateDiffuse(self, theWeight: Graphic3d_Vec3) -> Graphic3d_BSDF: ...
	@staticmethod
	def CreateGlass(self, theWeight: Graphic3d_Vec3, theAbsorptionColor: Graphic3d_Vec3, theAbsorptionCoeff: Standard_ShortReal, theRefractionIndex: Standard_ShortReal) -> Graphic3d_BSDF: ...
	@staticmethod
	def CreateMetallic(self, theWeight: Graphic3d_Vec3, theFresnel: Graphic3d_Fresnel, theRoughness: Standard_ShortReal) -> Graphic3d_BSDF: ...
	@staticmethod
	def CreateTransparent(self, theWeight: Graphic3d_Vec3, theAbsorptionColor: Graphic3d_Vec3, theAbsorptionCoeff: Standard_ShortReal) -> Graphic3d_BSDF: ...
	def Normalize(self) -> None: ...

class Graphic3d_BoundBuffer(NCollection_Buffer):
	def __init__(self, theAlloc: NCollection_BaseAllocator) -> None: ...
	def Init(self, theNbBounds: int, theHasColors: bool) -> False: ...

class Graphic3d_BufferRange:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theStart: int, theLength: int) -> None: ...
	def Clear(self) -> None: ...
	def IsEmpty(self) -> bool: ...
	def Unite(self, theRange: Graphic3d_BufferRange) -> None: ...
	def Upper(self) -> int: ...

class Graphic3d_BvhCStructureSet(BVH_PrimitiveSet3d):
	def Box(self, theIdx: int) -> Graphic3d_BndBox3d: ...
	def Center(self, theIdx: int, theAxis: int) -> float: ...
	def Size(self) -> int: ...
	def Structures(self) -> False: ...
	def Swap(self, theIdx1: int, theIdx2: int) -> None: ...

class Graphic3d_CLight(Standard_Transient):
	def __init__(self, theType: Graphic3d_TypeOfLightSource) -> None: ...
	def Angle(self) -> Standard_ShortReal: ...
	def Attenuation(self) -> Tuple[float, float]: ...
	def Color(self) -> Quantity_Color: ...
	def Concentration(self) -> Standard_ShortReal: ...
	def ConstAttenuation(self) -> Standard_ShortReal: ...
	def Direction(self) -> gp_Dir: ...
	def Direction(self) -> Tuple[float, float, float]: ...
	def GetId(self) -> TCollection_AsciiString: ...
	def Headlight(self) -> bool: ...
	def Intensity(self) -> Standard_ShortReal: ...
	def IsEnabled(self) -> bool: ...
	def IsHeadlight(self) -> bool: ...
	def LinearAttenuation(self) -> Standard_ShortReal: ...
	def Name(self) -> TCollection_AsciiString: ...
	def PackedColor(self) -> Graphic3d_Vec4: ...
	def PackedDirection(self) -> Graphic3d_Vec4: ...
	def PackedParams(self) -> Graphic3d_Vec4: ...
	def Position(self) -> gp_Pnt: ...
	def Position(self) -> Tuple[float, float, float]: ...
	def Revision(self) -> int: ...
	def SetAngle(self, theAngle: Standard_ShortReal) -> None: ...
	def SetAttenuation(self, theConstAttenuation: Standard_ShortReal, theLinearAttenuation: Standard_ShortReal) -> None: ...
	def SetColor(self, theColor: Quantity_Color) -> None: ...
	def SetConcentration(self, theConcentration: Standard_ShortReal) -> None: ...
	def SetDirection(self, theDir: gp_Dir) -> None: ...
	def SetDirection(self, theVx: float, theVy: float, theVz: float) -> None: ...
	def SetEnabled(self, theIsOn: bool) -> None: ...
	def SetHeadlight(self, theValue: bool) -> None: ...
	def SetIntensity(self, theValue: Standard_ShortReal) -> None: ...
	def SetName(self, theName: TCollection_AsciiString) -> None: ...
	def SetPosition(self, thePosition: gp_Pnt) -> None: ...
	def SetPosition(self, theX: float, theY: float, theZ: float) -> None: ...
	def SetSmoothAngle(self, theValue: Standard_ShortReal) -> None: ...
	def SetSmoothRadius(self, theValue: Standard_ShortReal) -> None: ...
	def Smoothness(self) -> Standard_ShortReal: ...
	def Type(self) -> Graphic3d_TypeOfLightSource: ...

class Graphic3d_CStructure(Standard_Transient):
	def BndBoxClipCheck(self) -> bool: ...
	def BoundingBox(self) -> Graphic3d_BndBox3d: ...
	def ChangeBoundingBox(self) -> Graphic3d_BndBox3d: ...
	def Clear(self) -> None: ...
	def ClipPlanes(self) -> Graphic3d_SequenceOfHClipPlane: ...
	def Connect(self, theStructure: Graphic3d_CStructure) -> None: ...
	def Disconnect(self, theStructure: Graphic3d_CStructure) -> None: ...
	def GraphicDriver(self) -> Graphic3d_GraphicDriver: ...
	def GraphicHighlight(self, theStyle: Graphic3d_PresentationAttributes) -> None: ...
	def GraphicUnhighlight(self) -> None: ...
	def Groups(self) -> Graphic3d_SequenceOfGroup: ...
	def HighlightStyle(self) -> Graphic3d_PresentationAttributes: ...
	def IsAlwaysRendered(self) -> bool: ...
	def IsCulled(self) -> bool: ...
	def IsVisible(self) -> False: ...
	def IsVisible(self, theViewId: int) -> False: ...
	def MarkAsNotCulled(self) -> None: ...
	def NewGroup(self, theStruct: Graphic3d_Structure) -> Graphic3d_Group: ...
	def OnVisibilityChanged(self) -> None: ...
	def RemoveGroup(self, theGroup: Graphic3d_Group) -> None: ...
	def SetBndBoxClipCheck(self, theBndBoxClipCheck: bool) -> None: ...
	def SetClipPlanes(self, thePlanes: Graphic3d_SequenceOfHClipPlane) -> None: ...
	def SetCulled(self, theIsCulled: bool) -> None: ...
	def SetTransformPersistence(self, theTrsfPers: Graphic3d_TransformPers) -> None: ...
	def SetTransformation(self, theTrsf: Geom_Transformation) -> None: ...
	def ShadowLink(self, theManager: Graphic3d_StructureManager) -> Graphic3d_CStructure: ...
	def TransformPersistence(self) -> Graphic3d_TransformPers: ...
	def Transformation(self) -> Geom_Transformation: ...
	def ZLayer(self) -> Graphic3d_ZLayerId: ...
	def updateLayerTransformation(self) -> None: ...

class Graphic3d_CTexture:
	def __init__(self) -> None: ...

class Graphic3d_Camera(Standard_Transient):
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theOther: Graphic3d_Camera) -> None: ...
	def Aspect(self) -> float: ...
	def AxialScale(self) -> gp_XYZ: ...
	def Center(self) -> gp_Pnt: ...
	def ConvertProj2View(self, thePnt: gp_Pnt) -> gp_Pnt: ...
	def ConvertView2Proj(self, thePnt: gp_Pnt) -> gp_Pnt: ...
	def ConvertView2World(self, thePnt: gp_Pnt) -> gp_Pnt: ...
	def ConvertWorld2View(self, thePnt: gp_Pnt) -> gp_Pnt: ...
	def Copy(self, theOther: Graphic3d_Camera) -> None: ...
	def CopyMappingData(self, theOtherCamera: Graphic3d_Camera) -> None: ...
	def CopyOrientationData(self, theOtherCamera: Graphic3d_Camera) -> None: ...
	def Direction(self) -> gp_Dir: ...
	def Distance(self) -> float: ...
	def Eye(self) -> gp_Pnt: ...
	def FOVy(self) -> float: ...
	def Frustum(self, theLeft: gp_Pln, theRight: gp_Pln, theBottom: gp_Pln, theTop: gp_Pln, theNear: gp_Pln, theFar: gp_Pln) -> None: ...
	def GetIODType(self) -> False: ...
	def IOD(self) -> float: ...
	def InvalidateOrientation(self) -> None: ...
	def InvalidateProjection(self) -> None: ...
	def IsOrthographic(self) -> bool: ...
	def IsStereo(self) -> bool: ...
	def MoveEyeTo(self, theEye: gp_Pnt) -> None: ...
	def OrientationMatrix(self) -> Graphic3d_Mat4d: ...
	def OrientationMatrixF(self) -> Graphic3d_Mat4: ...
	def OrthogonalizeUp(self) -> None: ...
	def OrthogonalizedUp(self) -> gp_Dir: ...
	def Project(self, thePnt: gp_Pnt) -> gp_Pnt: ...
	def ProjectionMatrix(self) -> Graphic3d_Mat4d: ...
	def ProjectionMatrixF(self) -> Graphic3d_Mat4: ...
	def ProjectionState(self) -> int: ...
	def ProjectionStereoLeft(self) -> Graphic3d_Mat4d: ...
	def ProjectionStereoLeftF(self) -> Graphic3d_Mat4: ...
	def ProjectionStereoRight(self) -> Graphic3d_Mat4d: ...
	def ProjectionStereoRightF(self) -> Graphic3d_Mat4: ...
	def ProjectionType(self) -> False: ...
	def Scale(self) -> float: ...
	def SetAspect(self, theAspect: float) -> None: ...
	def SetAxialScale(self, theAxialScale: gp_XYZ) -> None: ...
	def SetCenter(self, theCenter: gp_Pnt) -> None: ...
	def SetDirection(self, theDir: gp_Dir) -> None: ...
	def SetDirectionFromEye(self, theDir: gp_Dir) -> None: ...
	def SetDistance(self, theDistance: float) -> None: ...
	def SetEye(self, theEye: gp_Pnt) -> None: ...
	def SetEyeAndCenter(self, theEye: gp_Pnt, theCenter: gp_Pnt) -> None: ...
	def SetFOVy(self, theFOVy: float) -> None: ...
	def SetScale(self, theScale: float) -> None: ...
	def SetTile(self, theTile: Graphic3d_CameraTile) -> None: ...
	def SetUp(self, theUp: gp_Dir) -> None: ...
	def SetZRange(self, theZNear: float, theZFar: float) -> None: ...
	def Tile(self) -> Graphic3d_CameraTile: ...
	def Transform(self, theTrsf: gp_Trsf) -> None: ...
	def UnProject(self, thePnt: gp_Pnt) -> gp_Pnt: ...
	def Up(self) -> gp_Dir: ...
	def ViewDimensions(self) -> gp_XYZ: ...
	def ViewDimensions(self, theZValue: float) -> gp_XYZ: ...
	def WorldViewProjState(self) -> Graphic3d_WorldViewProjState: ...
	def WorldViewState(self) -> int: ...
	def ZFar(self) -> float: ...
	def ZFitAll(self, theScaleFactor: float, theMinMax: Bnd_Box, theGraphicBB: Bnd_Box) -> Tuple[False, float, float]: ...
	def ZFitAll(self, theScaleFactor: float, theMinMax: Bnd_Box, theGraphicBB: Bnd_Box) -> None: ...
	def ZFocus(self) -> float: ...
	def ZFocusType(self) -> False: ...
	def ZNear(self) -> float: ...

class Graphic3d_CameraTile:
	def __init__(self) -> None: ...
	def Cropped(self) -> Graphic3d_CameraTile: ...
	def IsValid(self) -> False: ...
	def OffsetLowerLeft(self) -> Graphic3d_Vec2i: ...

class Graphic3d_ClipPlane(Standard_Transient):
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theOther: Graphic3d_ClipPlane) -> None: ...
	@overload
	def __init__(self, theEquation: Graphic3d_Vec4d) -> None: ...
	@overload
	def __init__(self, thePlane: gp_Pln) -> None: ...
	def CappingAspect(self) -> Graphic3d_AspectFillArea3d: ...
	def CappingColor(self) -> Quantity_Color: ...
	def CappingCustomHatch(self) -> Graphic3d_HatchStyle: ...
	def CappingHatch(self) -> Aspect_HatchStyle: ...
	def CappingMaterial(self) -> Graphic3d_MaterialAspect: ...
	def CappingTexture(self) -> Graphic3d_TextureMap: ...
	def ChainNextPlane(self) -> Graphic3d_ClipPlane: ...
	def ChainPreviousPlane(self) -> Graphic3d_ClipPlane: ...
	def Clone(self) -> Graphic3d_ClipPlane: ...
	def GetEquation(self) -> Graphic3d_Vec4d: ...
	def GetId(self) -> TCollection_AsciiString: ...
	def IsBoxFullInHalfspace(self, theBox: Graphic3d_BndBox3d) -> False: ...
	def IsBoxFullOutHalfspace(self, theBox: Graphic3d_BndBox3d) -> False: ...
	def IsCapping(self) -> bool: ...
	def IsChain(self) -> bool: ...
	def IsHatchOn(self) -> bool: ...
	def IsOn(self) -> bool: ...
	def IsPointOutHalfspace(self, thePoint: Graphic3d_Vec4d) -> False: ...
	def MCountAspect(self) -> int: ...
	def MCountEquation(self) -> int: ...
	def NbChainNextPlanes(self) -> int: ...
	def ProbeBox(self, theBox: Graphic3d_BndBox3d) -> Graphic3d_ClipState: ...
	def ProbeBoxHalfspace(self, theBox: Graphic3d_BndBox3d) -> Graphic3d_ClipState: ...
	def ProbeBoxMaxPointHalfspace(self, theBox: Graphic3d_BndBox3d) -> Graphic3d_ClipState: ...
	def ProbeBoxTouch(self, theBox: Graphic3d_BndBox3d) -> bool: ...
	def ProbePoint(self, thePoint: Graphic3d_Vec4d) -> Graphic3d_ClipState: ...
	def ProbePointHalfspace(self, thePoint: Graphic3d_Vec4d) -> Graphic3d_ClipState: ...
	def ReversedEquation(self) -> Graphic3d_Vec4d: ...
	def SetCapping(self, theIsOn: bool) -> None: ...
	def SetCappingAspect(self, theAspect: Graphic3d_AspectFillArea3d) -> None: ...
	def SetCappingColor(self, theColor: Quantity_Color) -> None: ...
	def SetCappingCustomHatch(self, theStyle: Graphic3d_HatchStyle) -> None: ...
	def SetCappingHatch(self, theStyle: Aspect_HatchStyle) -> None: ...
	def SetCappingHatchOff(self) -> None: ...
	def SetCappingHatchOn(self) -> None: ...
	def SetCappingMaterial(self, theMat: Graphic3d_MaterialAspect) -> None: ...
	def SetCappingTexture(self, theTexture: Graphic3d_TextureMap) -> None: ...
	def SetChainNextPlane(self, thePlane: Graphic3d_ClipPlane) -> None: ...
	def SetEquation(self, thePlane: gp_Pln) -> None: ...
	def SetEquation(self, theEquation: Graphic3d_Vec4d) -> None: ...
	def SetOn(self, theIsOn: bool) -> None: ...
	def ToPlane(self) -> gp_Pln: ...
	def ToUseObjectMaterial(self) -> False: ...
	def ToUseObjectProperties(self) -> False: ...
	def ToUseObjectShader(self) -> False: ...
	def ToUseObjectTexture(self) -> False: ...

class Graphic3d_CullingTool:
	def __init__(self) -> None: ...
	def CacheClipPtsProjections(self) -> None: ...
	def Camera(self) -> Graphic3d_Camera: ...
	def ProjectionMatrix(self) -> Graphic3d_Mat4d: ...
	def SetViewVolume(self, theCamera: Graphic3d_Camera) -> None: ...
	def SetViewportSize(self, theViewportWidth: int, theViewportHeight: int, theResolutionRatio: float) -> None: ...
	def ViewportHeight(self) -> int: ...
	def ViewportWidth(self) -> int: ...
	def WorldViewMatrix(self) -> Graphic3d_Mat4d: ...
	def WorldViewProjState(self) -> Graphic3d_WorldViewProjState: ...

class Graphic3d_DataStructureManager(Standard_Transient):
	pass

class Graphic3d_FrameStats(Standard_Transient):
	def ActiveDataFrame(self) -> Graphic3d_FrameStatsDataTmp: ...
	def ChangeCounter(self, theCounter: Graphic3d_FrameStatsCounter) -> int: ...
	def ChangeDataFrames(self) -> False: ...
	def GetChangeTimer(self, theTimer: Graphic3d_FrameStatsTimer) -> float: ...
	def SetChangeTimer(self, theTimer: Graphic3d_FrameStatsTimer, value: float) -> None: ...
	def CounterValue(self, theCounter: Graphic3d_FrameStatsCounter) -> int: ...
	def DataFrames(self) -> False: ...
	def FrameDuration(self) -> float: ...
	def FrameRate(self) -> float: ...
	def FrameRateCpu(self) -> float: ...
	def HasCulledLayers(self) -> bool: ...
	def HasCulledStructs(self) -> bool: ...
	def IsLongLineFormat(self) -> bool: ...
	def LastDataFrame(self) -> Graphic3d_FrameStatsData: ...
	def LastDataFrameIndex(self) -> int: ...
	def SetLongLineFormat(self, theValue: bool) -> None: ...
	def SetUpdateInterval(self, theInterval: float) -> None: ...
	def TimerValue(self, theTimer: Graphic3d_FrameStatsTimer) -> float: ...
	def UpdateInterval(self) -> float: ...

class Graphic3d_FrameStatsData:
	def __init__(self) -> None: ...
	def CounterValue(self, theIndex: Graphic3d_FrameStatsCounter) -> int: ...
	def FillMax(self, theOther: Graphic3d_FrameStatsData) -> None: ...
	def FrameRate(self) -> float: ...
	def FrameRateCpu(self) -> float: ...
	def Reset(self) -> None: ...
	def TimerValue(self, theIndex: Graphic3d_FrameStatsTimer) -> float: ...

class Graphic3d_Fresnel:
	def __init__(self) -> None: ...
	@staticmethod
	def CreateConductor(self, theRefractionIndex: Standard_ShortReal, theAbsorptionIndex: Standard_ShortReal) -> Graphic3d_Fresnel: ...
	@staticmethod
	def CreateConductor(self, theRefractionIndex: Graphic3d_Vec3, theAbsorptionIndex: Graphic3d_Vec3) -> Graphic3d_Fresnel: ...
	@staticmethod
	def CreateConstant(self, theReflection: Standard_ShortReal) -> Graphic3d_Fresnel: ...
	@staticmethod
	def CreateDielectric(self, theRefractionIndex: Standard_ShortReal) -> Graphic3d_Fresnel: ...
	@staticmethod
	def CreateSchlick(self, theSpecularColor: Graphic3d_Vec3) -> Graphic3d_Fresnel: ...
	def FresnelType(self) -> Graphic3d_FresnelModel: ...
	def Serialize(self) -> Graphic3d_Vec4: ...

class Graphic3d_GraduatedTrihedron:
	def ArrowsLength(self) -> Standard_ShortReal: ...
	def AxisAspect(self, theIndex: int) -> Graphic3d_AxisAspect: ...
	def ChangeAxisAspect(self, theIndex: int) -> Graphic3d_AxisAspect: ...
	def ChangeXAxisAspect(self) -> Graphic3d_AxisAspect: ...
	def ChangeYAxisAspect(self) -> Graphic3d_AxisAspect: ...
	def ChangeZAxisAspect(self) -> Graphic3d_AxisAspect: ...
	def GridColor(self) -> Quantity_Color: ...
	def NamesFont(self) -> TCollection_AsciiString: ...
	def NamesFontAspect(self) -> False: ...
	def NamesSize(self) -> int: ...
	def SetArrowsLength(self, theValue: Standard_ShortReal) -> None: ...
	def SetDrawAxes(self, theToDraw: bool) -> None: ...
	def SetDrawGrid(self, theToDraw: bool) -> None: ...
	def SetGridColor(self, theColor: Quantity_Color) -> None: ...
	def SetNamesFont(self, theFont: TCollection_AsciiString) -> None: ...
	def SetNamesSize(self, theValue: int) -> None: ...
	def SetValuesFont(self, theFont: TCollection_AsciiString) -> None: ...
	def SetValuesSize(self, theValue: int) -> None: ...
	def ToDrawAxes(self) -> bool: ...
	def ToDrawGrid(self) -> bool: ...
	def ValuesFont(self) -> TCollection_AsciiString: ...
	def ValuesFontAspect(self) -> False: ...
	def ValuesSize(self) -> int: ...
	def XAxisAspect(self) -> Graphic3d_AxisAspect: ...
	def YAxisAspect(self) -> Graphic3d_AxisAspect: ...
	def ZAxisAspect(self) -> Graphic3d_AxisAspect: ...

class Graphic3d_GraphicDriver(Standard_Transient):
	def CreateStructure(self, theManager: Graphic3d_StructureManager) -> Graphic3d_CStructure: ...
	def CreateView(self, theMgr: Graphic3d_StructureManager) -> Graphic3d_CView: ...
	def DefaultTextHeight(self) -> Standard_ShortReal: ...
	def EnableVBO(self, status: bool) -> None: ...
	def GetDisplayConnection(self) -> Aspect_DisplayConnection: ...
	def InquireLightLimit(self) -> int: ...
	def InquireLimit(self, theType: Graphic3d_TypeOfLimit) -> int: ...
	def InquirePlaneLimit(self) -> int: ...
	def InquireViewLimit(self) -> int: ...
	def MemoryInfo(self, theFreeBytes: int, theInfo: TCollection_AsciiString) -> bool: ...
	def NewIdentification(self) -> int: ...
	def RemoveIdentification(self, theId: int) -> None: ...
	def RemoveStructure(self, theCStructure: Graphic3d_CStructure) -> None: ...
	def RemoveView(self, theView: Graphic3d_CView) -> None: ...
	def TextSize(self, theView: Graphic3d_CView, theText: str, theHeight: Standard_ShortReal, theWidth: Standard_ShortReal, theAscent: Standard_ShortReal, theDescent: Standard_ShortReal) -> None: ...
	def ViewExists(self, theWindow: Aspect_Window, theView: Graphic3d_CView) -> bool: ...
	def ZLayers(self, theLayerSeq: TColStd_SequenceOfInteger) -> None: ...

class Graphic3d_Group(Standard_Transient):
	def AddPrimitiveArray(self, theType: Graphic3d_TypeOfPrimitiveArray, theIndices: Graphic3d_IndexBuffer, theAttribs: Graphic3d_Buffer, theBounds: Graphic3d_BoundBuffer, theToEvalMinMax: Optional[bool]) -> None: ...
	def AddPrimitiveArray(self, thePrim: Graphic3d_ArrayOfPrimitives, theToEvalMinMax: Optional[bool]) -> None: ...
	def AddText(self, theTextParams: Graphic3d_Text, theToEvalMinMax: Optional[bool]) -> None: ...
	def Aspects(self) -> Graphic3d_Aspects: ...
	def BoundingBox(self) -> Graphic3d_BndBox4f: ...
	def ChangeBoundingBox(self) -> Graphic3d_BndBox4f: ...
	def Clear(self, theUpdateStructureMgr: Optional[bool]) -> None: ...
	def ContainsFacet(self) -> False: ...
	def IsClosed(self) -> False: ...
	def IsDeleted(self) -> bool: ...
	def IsEmpty(self) -> bool: ...
	def Marker(self, thePoint: Graphic3d_Vertex, theToEvalMinMax: Optional[bool]) -> None: ...
	def MinMaxValues(self) -> Tuple[float, float, float, float, float, float]: ...
	def Remove(self) -> None: ...
	def ReplaceAspects(self, theMap: Graphic3d_MapOfAspectsToAspects) -> None: ...
	def SetFlippingOptions(self, theIsEnabled: bool, theRefPlane: gp_Ax2) -> None: ...
	def SetMinMaxValues(self, theXMin: float, theYMin: float, theZMin: float, theXMax: float, theYMax: float, theZMax: float) -> None: ...
	def SetPrimitivesAspect(self, theAspect: Graphic3d_Aspects) -> None: ...
	def SetStencilTestOptions(self, theIsEnabled: bool) -> None: ...
	def Structure(self) -> Graphic3d_Structure: ...
	def SynchronizeAspects(self) -> None: ...
	def Text(self, AText: str, APoint: Graphic3d_Vertex, AHeight: float, AAngle: float, ATp: Graphic3d_TextPath, AHta: Graphic3d_HorizontalTextAlignment, AVta: Graphic3d_VerticalTextAlignment, EvalMinMax: Optional[bool]) -> None: ...
	def Text(self, AText: str, APoint: Graphic3d_Vertex, AHeight: float, EvalMinMax: Optional[bool]) -> None: ...
	def Text(self, AText: TCollection_ExtendedString, APoint: Graphic3d_Vertex, AHeight: float, AAngle: float, ATp: Graphic3d_TextPath, AHta: Graphic3d_HorizontalTextAlignment, AVta: Graphic3d_VerticalTextAlignment, EvalMinMax: Optional[bool]) -> None: ...
	def Text(self, AText: TCollection_ExtendedString, APoint: Graphic3d_Vertex, AHeight: float, EvalMinMax: Optional[bool]) -> None: ...
	def Text(self, theTextUtf: str, theOrientation: gp_Ax2, theHeight: float, theAngle: float, theTp: Graphic3d_TextPath, theHTA: Graphic3d_HorizontalTextAlignment, theVTA: Graphic3d_VerticalTextAlignment, theToEvalMinMax: Optional[bool], theHasOwnAnchor: Optional[bool]) -> None: ...
	def Text(self, theText: TCollection_ExtendedString, theOrientation: gp_Ax2, theHeight: float, theAngle: float, theTp: Graphic3d_TextPath, theHTA: Graphic3d_HorizontalTextAlignment, theVTA: Graphic3d_VerticalTextAlignment, theToEvalMinMax: Optional[bool], theHasOwnAnchor: Optional[bool]) -> None: ...

class Graphic3d_HatchStyle(Standard_Transient):
	@overload
	def __init__(self, thePattern: Image_PixMap) -> None: ...
	@overload
	def __init__(self, theType: Aspect_HatchStyle) -> None: ...
	def HatchType(self) -> int: ...
	def Pattern(self) -> str: ...

class Graphic3d_Layer(Standard_Transient):
	def Add(self, theStruct: Graphic3d_CStructure, thePriority: int, isForChangePriority: Optional[bool]) -> None: ...
	def Append(self, theOther: Graphic3d_Layer) -> bool: ...
	def ArrayOfStructures(self) -> Graphic3d_ArrayOfIndexedMapOfStructure: ...
	def BoundingBox(self, theViewId: int, theCamera: Graphic3d_Camera, theWindowWidth: int, theWindowHeight: int, theToIncludeAuxiliary: bool) -> Bnd_Box: ...
	def CullableStructuresBVH(self) -> Graphic3d_BvhCStructureSet: ...
	def CullableTrsfPersStructuresBVH(self) -> Graphic3d_BvhCStructureSetTrsfPers: ...
	def InvalidateBVHData(self) -> None: ...
	def InvalidateBoundingBox(self) -> None: ...
	def IsCulled(self) -> False: ...
	def IsImmediate(self) -> bool: ...
	def LayerId(self) -> Graphic3d_ZLayerId: ...
	def LayerSettings(self) -> Graphic3d_ZLayerSettings: ...
	def NbOfTransformPersistenceObjects(self) -> int: ...
	def NbPriorities(self) -> int: ...
	def NbStructures(self) -> int: ...
	def NbStructuresNotCulled(self) -> int: ...
	def NonCullableStructures(self) -> False: ...
	def Remove(self, theStruct: Graphic3d_CStructure, isForChangePriority: Optional[bool]) -> Tuple[False, int]: ...
	def SetLayerSettings(self, theSettings: Graphic3d_ZLayerSettings) -> None: ...
	def considerZoomPersistenceObjects(self, theViewId: int, theCamera: Graphic3d_Camera, theWindowWidth: int, theWindowHeight: int) -> float: ...

class Graphic3d_LightSet(Standard_Transient):
	def __init__(self) -> None: ...
	def Add(self, theLight: Graphic3d_CLight) -> bool: ...
	def AmbientColor(self) -> Graphic3d_Vec4: ...
	def Contains(self, theLight: Graphic3d_CLight) -> bool: ...
	def Extent(self) -> int: ...
	def IsEmpty(self) -> bool: ...
	def KeyEnabledLong(self) -> TCollection_AsciiString: ...
	def KeyEnabledShort(self) -> TCollection_AsciiString: ...
	def Lower(self) -> int: ...
	def NbEnabled(self) -> int: ...
	def NbEnabledLightsOfType(self, theType: Graphic3d_TypeOfLightSource) -> int: ...
	def NbLightsOfType(self, theType: Graphic3d_TypeOfLightSource) -> int: ...
	def Remove(self, theLight: Graphic3d_CLight) -> bool: ...
	def Revision(self) -> int: ...
	def UpdateRevision(self) -> int: ...
	def Upper(self) -> int: ...
	def Value(self, theIndex: int) -> Graphic3d_CLight: ...

class Graphic3d_MarkerImage(Standard_Transient):
	@overload
	def __init__(self, theImage: Image_PixMap) -> None: ...
	@overload
	def __init__(self, theBitMap: TColStd_HArray1OfByte, theWidth: int, theHeight: int) -> None: ...
	def GetBitMapArray(self, theAlphaValue: Optional[float]) -> TColStd_HArray1OfByte: ...
	def GetImage(self) -> Image_PixMap: ...
	def GetImageAlpha(self) -> Image_PixMap: ...
	def GetImageAlphaId(self) -> TCollection_AsciiString: ...
	def GetImageId(self) -> TCollection_AsciiString: ...
	def GetTextureSize(self) -> Tuple[int, int]: ...

class Graphic3d_MaterialAspect:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theName: Graphic3d_NameOfMaterial) -> None: ...
	def Alpha(self) -> Standard_ShortReal: ...
	def AmbientColor(self) -> Quantity_Color: ...
	def BSDF(self) -> Graphic3d_BSDF: ...
	def Color(self) -> Quantity_Color: ...
	def DiffuseColor(self) -> Quantity_Color: ...
	def EmissiveColor(self) -> Quantity_Color: ...
	def IncreaseShine(self, theDelta: Standard_ShortReal) -> None: ...
	def IsDifferent(self, theOther: Graphic3d_MaterialAspect) -> bool: ...
	def IsEqual(self, theOther: Graphic3d_MaterialAspect) -> bool: ...
	@staticmethod
	def MaterialFromName(self, theName: str, theMat: Graphic3d_NameOfMaterial) -> bool: ...
	@staticmethod
	def MaterialFromName(self, theName: str) -> Graphic3d_NameOfMaterial: ...
	@staticmethod
	def MaterialName(self, theRank: int) -> str: ...
	def MaterialName(self) -> str: ...
	@staticmethod
	def MaterialType(self, theRank: int) -> Graphic3d_TypeOfMaterial: ...
	def MaterialType(self) -> Graphic3d_TypeOfMaterial: ...
	def MaterialType(self, theType: Graphic3d_TypeOfMaterial) -> bool: ...
	def Name(self) -> Graphic3d_NameOfMaterial: ...
	@staticmethod
	def NumberOfMaterials(self) -> int: ...
	def ReflectionMode(self, theType: Graphic3d_TypeOfReflection) -> bool: ...
	def RefractionIndex(self) -> Standard_ShortReal: ...
	def RequestedName(self) -> Graphic3d_NameOfMaterial: ...
	def Reset(self) -> None: ...
	def SetAlpha(self, theValue: Standard_ShortReal) -> None: ...
	def SetAmbientColor(self, theColor: Quantity_Color) -> None: ...
	def SetBSDF(self, theBSDF: Graphic3d_BSDF) -> None: ...
	def SetColor(self, theColor: Quantity_Color) -> None: ...
	def SetDiffuseColor(self, theColor: Quantity_Color) -> None: ...
	def SetEmissiveColor(self, theColor: Quantity_Color) -> None: ...
	def SetMaterialName(self, theName: TCollection_AsciiString) -> None: ...
	def SetMaterialType(self, theType: Graphic3d_TypeOfMaterial) -> None: ...
	def SetReflectionModeOff(self, theType: Graphic3d_TypeOfReflection) -> None: ...
	def SetRefractionIndex(self, theValue: Standard_ShortReal) -> None: ...
	def SetShininess(self, theValue: Standard_ShortReal) -> None: ...
	def SetSpecularColor(self, theColor: Quantity_Color) -> None: ...
	def SetTransparency(self, theValue: Standard_ShortReal) -> None: ...
	def Shininess(self) -> Standard_ShortReal: ...
	def SpecularColor(self) -> Quantity_Color: ...
	def StringName(self) -> TCollection_AsciiString: ...
	def Transparency(self) -> Standard_ShortReal: ...

class Graphic3d_PolygonOffset:
	def __init__(self) -> None: ...

class Graphic3d_PresentationAttributes(Standard_Transient):
	def __init__(self) -> None: ...
	def BasicFillAreaAspect(self) -> Graphic3d_AspectFillArea3d: ...
	def Color(self) -> Quantity_Color: ...
	def ColorRGBA(self) -> Quantity_ColorRGBA: ...
	def DisplayMode(self) -> int: ...
	def Method(self) -> Aspect_TypeOfHighlightMethod: ...
	def SetBasicFillAreaAspect(self, theAspect: Graphic3d_AspectFillArea3d) -> None: ...
	def SetColor(self, theColor: Quantity_Color) -> None: ...
	def SetDisplayMode(self, theMode: int) -> None: ...
	def SetMethod(self, theMethod: Aspect_TypeOfHighlightMethod) -> None: ...
	def SetTransparency(self, theTranspCoef: Standard_ShortReal) -> None: ...
	def Transparency(self) -> Standard_ShortReal: ...
	def ZLayer(self) -> Graphic3d_ZLayerId: ...

class Graphic3d_RenderingParams:
	def __init__(self) -> None: ...
	def ResolutionRatio(self) -> Standard_ShortReal: ...

class Graphic3d_SequenceOfHClipPlane(Standard_Transient):
	def __init__(self) -> None: ...
	def Append(self, theItem: Graphic3d_ClipPlane) -> False: ...
	def Clear(self) -> None: ...
	def First(self) -> Graphic3d_ClipPlane: ...
	def IsEmpty(self) -> False: ...
	def Remove(self, theItem: Graphic3d_ClipPlane) -> False: ...
	def SetOverrideGlobal(self, theToOverride: bool) -> None: ...
	def Size(self) -> int: ...
	def ToOverrideGlobal(self) -> bool: ...

class Graphic3d_ShaderAttribute(Standard_Transient):
	def __init__(self, theName: TCollection_AsciiString, theLocation: int) -> None: ...
	def Location(self) -> False: ...
	def Name(self) -> TCollection_AsciiString: ...

class Graphic3d_ShaderObject(Standard_Transient):
	@staticmethod
	def CreateFromFile(self, theType: Graphic3d_TypeOfShaderObject, thePath: TCollection_AsciiString) -> Graphic3d_ShaderObject: ...
	@staticmethod
	def CreateFromSource(self, theType: Graphic3d_TypeOfShaderObject, theSource: TCollection_AsciiString) -> Graphic3d_ShaderObject: ...
	def GetId(self) -> TCollection_AsciiString: ...
	def IsDone(self) -> bool: ...
	def Path(self) -> OSD_Path: ...
	def Source(self) -> TCollection_AsciiString: ...
	def Type(self) -> Graphic3d_TypeOfShaderObject: ...

class Graphic3d_ShaderProgram(Standard_Transient):
	def __init__(self) -> None: ...
	def AppendToHeader(self, theHeaderLine: TCollection_AsciiString) -> None: ...
	def AttachShader(self, theShader: Graphic3d_ShaderObject) -> bool: ...
	def ClearVariables(self) -> None: ...
	def DetachShader(self, theShader: Graphic3d_ShaderObject) -> bool: ...
	def GetId(self) -> TCollection_AsciiString: ...
	def HasAlphaTest(self) -> bool: ...
	def HasDefaultSampler(self) -> bool: ...
	def HasWeightOitOutput(self) -> bool: ...
	def Header(self) -> TCollection_AsciiString: ...
	def IsDone(self) -> bool: ...
	def NbClipPlanesMax(self) -> int: ...
	def NbFragmentOutputs(self) -> int: ...
	def NbLightsMax(self) -> int: ...
	def PushVariableInt(self, theName: TCollection_AsciiString, theValue: int) -> bool: ...
	def PushVariableVec2(self, theName: TCollection_AsciiString, theValue: Graphic3d_Vec2) -> bool: ...
	def PushVariableVec2i(self, theName: TCollection_AsciiString, theValue: Graphic3d_Vec2i) -> bool: ...
	def PushVariableVec3(self, theName: TCollection_AsciiString, theValue: Graphic3d_Vec3) -> bool: ...
	def PushVariableVec3i(self, theName: TCollection_AsciiString, theValue: Graphic3d_Vec3i) -> bool: ...
	def PushVariableVec4(self, theName: TCollection_AsciiString, theValue: Graphic3d_Vec4) -> bool: ...
	def PushVariableVec4i(self, theName: TCollection_AsciiString, theValue: Graphic3d_Vec4i) -> bool: ...
	def SetAlphaTest(self, theAlphaTest: bool) -> None: ...
	def SetDefaultSampler(self, theHasDefSampler: bool) -> None: ...
	def SetHeader(self, theHeader: TCollection_AsciiString) -> None: ...
	def SetId(self, theId: TCollection_AsciiString) -> None: ...
	def SetNbClipPlanesMax(self, theNbPlanes: int) -> None: ...
	def SetNbFragmentOutputs(self, theNbOutputs: int) -> None: ...
	def SetNbLightsMax(self, theNbLights: int) -> None: ...
	def SetVertexAttributes(self, theAttributes: Graphic3d_ShaderAttributeList) -> None: ...
	def SetWeightOitOutput(self, theOutput: bool) -> None: ...
	def ShaderObjects(self) -> Graphic3d_ShaderObjectList: ...
	@staticmethod
	def ShadersFolder(self) -> TCollection_AsciiString: ...
	def Variables(self) -> Graphic3d_ShaderVariableList: ...
	def VertexAttributes(self) -> Graphic3d_ShaderAttributeList: ...

class Graphic3d_ShaderVariable(Standard_Transient):
	def IsDone(self) -> bool: ...
	def Name(self) -> TCollection_AsciiString: ...
	def Value(self) -> Graphic3d_ValueInterface: ...

class Graphic3d_Structure(Standard_Transient):
	def __init__(self, theManager: Graphic3d_StructureManager, theLinkPrs: Optional[Graphic3d_Structure]) -> None: ...
	@staticmethod
	def AcceptConnection(self, theStructure1: Graphic3d_Structure, theStructure2: Graphic3d_Structure, theType: Graphic3d_TypeOfConnection) -> bool: ...
	def Ancestors(self, SG: Graphic3d_MapOfStructure) -> None: ...
	def CStructure(self) -> Graphic3d_CStructure: ...
	def CalculateBoundBox(self) -> None: ...
	def Clear(self, WithDestruction: Optional[bool]) -> None: ...
	def ClipPlanes(self) -> Graphic3d_SequenceOfHClipPlane: ...
	def Compute(self) -> None: ...
	def Compute(self, theProjector: Graphic3d_DataStructureManager) -> Graphic3d_Structure: ...
	def Compute(self, theProjector: Graphic3d_DataStructureManager, theTrsf: Geom_Transformation) -> Graphic3d_Structure: ...
	def Compute(self, theProjector: Graphic3d_DataStructureManager, theStructure: Graphic3d_Structure) -> None: ...
	def Compute(self, theProjector: Graphic3d_DataStructureManager, theTrsf: Geom_Transformation, theStructure: Graphic3d_Structure) -> None: ...
	def ComputeVisual(self) -> Graphic3d_TypeOfStructure: ...
	def Connect(self, theStructure: Graphic3d_Structure, theType: Graphic3d_TypeOfConnection, theWithCheck: Optional[bool]) -> None: ...
	def Connect(self, thePrs: Graphic3d_Structure) -> None: ...
	def ContainsFacet(self) -> bool: ...
	def CurrentGroup(self) -> Graphic3d_Group: ...
	def Descendants(self, SG: Graphic3d_MapOfStructure) -> None: ...
	def Disconnect(self, theStructure: Graphic3d_Structure) -> None: ...
	def DisconnectAll(self, AType: Graphic3d_TypeOfConnection) -> None: ...
	def Display(self) -> None: ...
	def DisplayPriority(self) -> int: ...
	def Erase(self) -> None: ...
	def GetZLayer(self) -> Graphic3d_ZLayerId: ...
	def GraphicClear(self, WithDestruction: bool) -> None: ...
	def GraphicConnect(self, theDaughter: Graphic3d_Structure) -> None: ...
	def GraphicDisconnect(self, theDaughter: Graphic3d_Structure) -> None: ...
	def GraphicTransform(self, theTrsf: Geom_Transformation) -> None: ...
	def Groups(self) -> Graphic3d_SequenceOfGroup: ...
	def HLRValidation(self) -> bool: ...
	def Highlight(self, theStyle: Graphic3d_PresentationAttributes, theToUpdateMgr: Optional[bool]) -> None: ...
	def HighlightStyle(self) -> Graphic3d_PresentationAttributes: ...
	def Identification(self) -> int: ...
	def IsDeleted(self) -> bool: ...
	def IsDisplayed(self) -> bool: ...
	def IsEmpty(self) -> bool: ...
	def IsHighlighted(self) -> bool: ...
	def IsInfinite(self) -> bool: ...
	def IsMutable(self) -> bool: ...
	def IsTransformed(self) -> bool: ...
	def IsVisible(self) -> bool: ...
	def MinMaxValues(self, theToIgnoreInfiniteFlag: Optional[bool]) -> Bnd_Box: ...
	def NewGroup(self) -> Graphic3d_Group: ...
	def NumberOfGroups(self) -> int: ...
	def Owner(self) -> None: ...
	@staticmethod
	def PrintNetwork(self, AStructure: Graphic3d_Structure, AType: Graphic3d_TypeOfConnection) -> None: ...
	def ReCompute(self) -> None: ...
	def ReCompute(self, aProjector: Graphic3d_DataStructureManager) -> None: ...
	def Remove(self) -> None: ...
	def Remove(self, thePrs: Graphic3d_Structure) -> None: ...
	def Remove(self, thePtr: Graphic3d_Structure, theType: Graphic3d_TypeOfConnection) -> None: ...
	def RemoveAll(self) -> None: ...
	def ResetDisplayPriority(self) -> None: ...
	def SetClipPlanes(self, thePlanes: Graphic3d_SequenceOfHClipPlane) -> None: ...
	def SetComputeVisual(self, theVisual: Graphic3d_TypeOfStructure) -> None: ...
	def SetDisplayPriority(self, Priority: int) -> None: ...
	def SetHLRValidation(self, theFlag: bool) -> None: ...
	def SetInfiniteState(self, theToSet: bool) -> None: ...
	def SetIsForHighlight(self, isForHighlight: bool) -> None: ...
	def SetMutable(self, theIsMutable: bool) -> None: ...
	def SetOwner(self, theOwner: None) -> None: ...
	def SetTransformPersistence(self, theTrsfPers: Graphic3d_TransformPers) -> None: ...
	def SetTransformation(self, theTrsf: Geom_Transformation) -> None: ...
	def SetVisible(self, AValue: bool) -> None: ...
	def SetVisual(self, AVisual: Graphic3d_TypeOfStructure) -> None: ...
	def SetZoomLimit(self, LimitInf: float, LimitSup: float) -> None: ...
	def Transform(self, theTrsf: Geom_Transformation) -> None: ...
	def TransformPersistence(self) -> Graphic3d_TransformPers: ...
	def Transformation(self) -> Geom_Transformation: ...
	@staticmethod
	def Transforms(self, theTrsf: gp_Trsf, theX: float, theY: float, theZ: float) -> Tuple[float, float, float]: ...
	def UnHighlight(self) -> None: ...
	def Visual(self) -> Graphic3d_TypeOfStructure: ...

class Graphic3d_StructureManager(Standard_Transient):
	def __init__(self, theDriver: Graphic3d_GraphicDriver) -> None: ...
	def ChangeDisplayPriority(self, theStructure: Graphic3d_Structure, theOldPriority: int, theNewPriority: int) -> None: ...
	def Clear(self, theStructure: Graphic3d_Structure, theWithDestruction: bool) -> None: ...
	def Connect(self, theMother: Graphic3d_Structure, theDaughter: Graphic3d_Structure) -> None: ...
	def DefinedViews(self) -> Graphic3d_IndexedMapOfView: ...
	def Disconnect(self, theMother: Graphic3d_Structure, theDaughter: Graphic3d_Structure) -> None: ...
	def Display(self, theStructure: Graphic3d_Structure) -> None: ...
	def DisplayedStructures(self, SG: Graphic3d_MapOfStructure) -> None: ...
	def Erase(self) -> None: ...
	def Erase(self, theStructure: Graphic3d_Structure) -> None: ...
	def GraphicDriver(self) -> Graphic3d_GraphicDriver: ...
	def Highlight(self, theStructure: Graphic3d_Structure) -> None: ...
	def HighlightedStructures(self, SG: Graphic3d_MapOfStructure) -> None: ...
	def Identification(self, theView: Graphic3d_CView) -> int: ...
	def Identification(self, AId: int) -> Graphic3d_Structure: ...
	def IsDeviceLost(self) -> bool: ...
	def MaxNumOfViews(self) -> int: ...
	def ObjectAffinity(self, theObject: Standard_Transient) -> Graphic3d_ViewAffinity: ...
	def ReCompute(self, theStructure: Graphic3d_Structure) -> None: ...
	def ReCompute(self, theStructure: Graphic3d_Structure, theProjector: Graphic3d_DataStructureManager) -> None: ...
	def RecomputeStructures(self) -> None: ...
	def RegisterObject(self, theObject: Standard_Transient) -> Graphic3d_ViewAffinity: ...
	def Remove(self) -> None: ...
	def SetDeviceLost(self) -> None: ...
	def SetTransform(self, theStructure: Graphic3d_Structure, theTrsf: Geom_Transformation) -> None: ...
	def UnHighlight(self, AStructure: Graphic3d_Structure) -> None: ...
	def UnHighlight(self) -> None: ...
	def UnIdentification(self, theView: Graphic3d_CView) -> None: ...
	def UnregisterObject(self, theObject: Standard_Transient) -> None: ...

class Graphic3d_Text(Standard_Transient):
	def __init__(self, theHeight: Standard_ShortReal) -> None: ...
	def HasOwnAnchorPoint(self) -> bool: ...
	def HasPlane(self) -> bool: ...
	def Height(self) -> Standard_ShortReal: ...
	def HorizontalAlignment(self) -> Graphic3d_HorizontalTextAlignment: ...
	def Orientation(self) -> gp_Ax2: ...
	def Position(self) -> gp_Pnt: ...
	def ResetOrientation(self) -> None: ...
	def SetHeight(self, theHeight: Standard_ShortReal) -> None: ...
	def SetHorizontalAlignment(self, theJustification: Graphic3d_HorizontalTextAlignment) -> None: ...
	def SetOrientation(self, theOrientation: gp_Ax2) -> None: ...
	def SetOwnAnchorPoint(self, theHasOwnAnchor: bool) -> None: ...
	def SetPosition(self, thePoint: gp_Pnt) -> None: ...
	def SetText(self, theText: NCollection_String) -> None: ...
	def SetText(self, theText: TCollection_AsciiString) -> None: ...
	def SetText(self, theText: str) -> None: ...
	def SetVerticalAlignment(self, theJustification: Graphic3d_VerticalTextAlignment) -> None: ...
	def Text(self) -> NCollection_String: ...
	def VerticalAlignment(self) -> Graphic3d_VerticalTextAlignment: ...

class Graphic3d_TextureParams(Standard_Transient):
	def __init__(self) -> None: ...
	def AnisoFilter(self) -> Graphic3d_LevelOfTextureAnisotropy: ...
	def Filter(self) -> Graphic3d_TypeOfTextureFilter: ...
	def GenMode(self) -> Graphic3d_TypeOfTextureMode: ...
	def GenPlaneS(self) -> Graphic3d_Vec4: ...
	def GenPlaneT(self) -> Graphic3d_Vec4: ...
	def IsModulate(self) -> bool: ...
	def IsRepeat(self) -> bool: ...
	def Rotation(self) -> Standard_ShortReal: ...
	def SamplerRevision(self) -> int: ...
	def Scale(self) -> Graphic3d_Vec2: ...
	def SetAnisoFilter(self, theLevel: Graphic3d_LevelOfTextureAnisotropy) -> None: ...
	def SetFilter(self, theFilter: Graphic3d_TypeOfTextureFilter) -> None: ...
	def SetGenMode(self, theMode: Graphic3d_TypeOfTextureMode, thePlaneS: Graphic3d_Vec4, thePlaneT: Graphic3d_Vec4) -> None: ...
	def SetModulate(self, theToModulate: bool) -> None: ...
	def SetRepeat(self, theToRepeat: bool) -> None: ...
	def SetRotation(self, theAngleDegrees: Standard_ShortReal) -> None: ...
	def SetScale(self, theScale: Graphic3d_Vec2) -> None: ...
	def SetTextureUnit(self, theUnit: Graphic3d_TextureUnit) -> None: ...
	def SetTranslation(self, theVec: Graphic3d_Vec2) -> None: ...
	def TextureUnit(self) -> Graphic3d_TextureUnit: ...
	def Translation(self) -> Graphic3d_Vec2: ...

class Graphic3d_TextureRoot(Standard_Transient):
	def GetId(self) -> TCollection_AsciiString: ...
	def GetImage(self) -> Image_PixMap: ...
	def GetParams(self) -> Graphic3d_TextureParams: ...
	def IsDone(self) -> bool: ...
	def Path(self) -> OSD_Path: ...
	def Revision(self) -> int: ...
	@staticmethod
	def TexturesFolder(self) -> TCollection_AsciiString: ...
	def Type(self) -> Graphic3d_TypeOfTexture: ...
	def UpdateRevision(self) -> None: ...

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_UniformValueTypeID:
	pass

class Graphic3d_ValidatedCubeMapOrder:
	pass

class Graphic3d_ValueInterface:
	def TypeID(self) -> int: ...

class Graphic3d_Vertex:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, thePoint: Graphic3d_Vertex) -> None: ...
	@overload
	def __init__(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal) -> None: ...
	@overload
	def __init__(self, theX: float, theY: float, theZ: float) -> None: ...
	def Coord(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal) -> None: ...
	def Coord(self) -> Tuple[float, float, float]: ...
	def Distance(self, theOther: Graphic3d_Vertex) -> Standard_ShortReal: ...
	def SetCoord(self, theX: Standard_ShortReal, theY: Standard_ShortReal, theZ: Standard_ShortReal) -> None: ...
	def SetCoord(self, theX: float, theY: float, theZ: float) -> None: ...
	def X(self) -> Standard_ShortReal: ...
	def Y(self) -> Standard_ShortReal: ...
	def Z(self) -> Standard_ShortReal: ...

class Graphic3d_ViewAffinity(Standard_Transient):
	def __init__(self) -> None: ...
	def IsVisible(self, theViewId: int) -> False: ...
	def SetVisible(self, theIsVisible: bool) -> None: ...

class Graphic3d_WorldViewProjState:
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theProjectionState: int, theWorldViewState: int, theCamera: Optional[Standard_Transient]) -> None: ...
	def Initialize(self, theProjectionState: int, theWorldViewState: int, theCamera: Optional[Standard_Transient]) -> None: ...
	def Initialize(self, theCamera: Optional[Standard_Transient]) -> None: ...
	def IsChanged(self, theState: Graphic3d_WorldViewProjState) -> bool: ...
	def IsProjectionChanged(self, theState: Graphic3d_WorldViewProjState) -> bool: ...
	def IsValid(self) -> bool: ...
	def IsWorldViewChanged(self, theState: Graphic3d_WorldViewProjState) -> bool: ...
	def ProjectionState(self) -> int: ...
	def Reset(self) -> None: ...
	def WorldViewState(self) -> int: ...

class Graphic3d_ZLayerSettings:
	def __init__(self) -> None: ...
	def ChangePolygonOffset(self) -> Graphic3d_PolygonOffset: ...
	def CullingDistance(self) -> float: ...
	def CullingSize(self) -> float: ...
	def DisableSetting(self, theSetting: Graphic3d_ZLayerSetting) -> None: ...
	def EnableSetting(self, theSetting: Graphic3d_ZLayerSetting) -> None: ...
	def HasCullingDistance(self) -> bool: ...
	def HasCullingSize(self) -> bool: ...
	def IsImmediate(self) -> bool: ...
	def IsRaytracable(self) -> bool: ...
	def IsSettingEnabled(self, theSetting: Graphic3d_ZLayerSetting) -> bool: ...
	def Lights(self) -> Graphic3d_LightSet: ...
	def Name(self) -> TCollection_AsciiString: ...
	def Origin(self) -> gp_XYZ: ...
	def OriginTransformation(self) -> Geom_Transformation: ...
	def PolygonOffset(self) -> Graphic3d_PolygonOffset: ...
	def SetClearDepth(self, theValue: bool) -> None: ...
	def SetCullingDistance(self, theDistance: float) -> None: ...
	def SetCullingSize(self, theSize: float) -> None: ...
	def SetDepthOffsetNegative(self) -> None: ...
	def SetDepthOffsetPositive(self) -> None: ...
	def SetEnableDepthTest(self, theValue: bool) -> None: ...
	def SetEnableDepthWrite(self, theValue: bool) -> None: ...
	def SetEnvironmentTexture(self, theValue: bool) -> None: ...
	def SetImmediate(self, theValue: bool) -> None: ...
	def SetLights(self, theLights: Graphic3d_LightSet) -> None: ...
	def SetName(self, theName: TCollection_AsciiString) -> None: ...
	def SetOrigin(self, theOrigin: gp_XYZ) -> None: ...
	def SetPolygonOffset(self, theParams: Graphic3d_PolygonOffset) -> None: ...
	def SetRaytracable(self, theToRaytrace: bool) -> None: ...
	def SetRenderInDepthPrepass(self, theToRender: bool) -> None: ...
	def ToClearDepth(self) -> bool: ...
	def ToEnableDepthTest(self) -> bool: ...
	def ToEnableDepthWrite(self) -> bool: ...
	def ToRenderInDepthPrepass(self) -> bool: ...
	def UseEnvironmentTexture(self) -> bool: ...

class Graphic3d_ArrayOfPoints(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theHasVColors: Optional[bool], theHasVNormals: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfPolygons(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxBounds: Optional[int], theMaxEdges: Optional[int], theHasVNormals: Optional[bool], theHasVColors: Optional[bool], theHasBColors: Optional[bool], theHasVTexels: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfPolylines(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxBounds: Optional[int], theMaxEdges: Optional[int], theHasVColors: Optional[bool], theHasBColors: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfQuadrangleStrips(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxStrips: Optional[int], theHasVNormals: Optional[bool], theHasVColors: Optional[bool], theHasSColors: Optional[bool], theHasVTexels: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfQuadrangles(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxEdges: Optional[int], theHasVNormals: Optional[bool], theHasVColors: Optional[bool], theHasVTexels: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfSegments(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxEdges: Optional[int], theHasVColors: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfTriangleFans(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxFans: Optional[int], theHasVNormals: Optional[bool], theHasVColors: Optional[bool], theHasBColors: Optional[bool], theHasVTexels: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfTriangleStrips(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxStrips: Optional[int], theHasVNormals: Optional[bool], theHasVColors: Optional[bool], theHasBColors: Optional[bool], theHasVTexels: Optional[bool]) -> None: ...

class Graphic3d_ArrayOfTriangles(Graphic3d_ArrayOfPrimitives):
	@overload
	def __init__(self, theMaxVertexs: int, theMaxEdges: Optional[int], theHasVNormals: Optional[bool], theHasVColors: Optional[bool], theHasVTexels: Optional[bool]) -> None: ...

class Graphic3d_AspectFillArea3d(Graphic3d_Aspects):
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theInterior: Aspect_InteriorStyle, theInteriorColor: Quantity_Color, theEdgeColor: Quantity_Color, theEdgeLineType: Aspect_TypeOfLine, theEdgeWidth: float, theFrontMaterial: Graphic3d_MaterialAspect, theBackMaterial: Graphic3d_MaterialAspect) -> None: ...
	def Edge(self) -> False: ...

class Graphic3d_AspectLine3d(Graphic3d_Aspects):
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theColor: Quantity_Color, theType: Aspect_TypeOfLine, theWidth: float) -> None: ...
	def SetType(self, theType: Aspect_TypeOfLine) -> None: ...
	def SetWidth(self, theWidth: float) -> None: ...
	def SetWidth(self, theWidth: Standard_ShortReal) -> None: ...
	def Type(self) -> Aspect_TypeOfLine: ...
	def Width(self) -> Standard_ShortReal: ...

class Graphic3d_AspectMarker3d(Graphic3d_Aspects):
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theType: Aspect_TypeOfMarker, theColor: Quantity_Color, theScale: float) -> None: ...
	@overload
	def __init__(self, theColor: Quantity_Color, theWidth: int, theHeight: int, theTextureBitmap: TColStd_HArray1OfByte) -> None: ...
	@overload
	def __init__(self, theTextureImage: Image_PixMap) -> None: ...
	def GetMarkerImage(self) -> Graphic3d_MarkerImage: ...
	def GetTextureSize(self) -> Tuple[int, int]: ...
	def Scale(self) -> Standard_ShortReal: ...
	def SetBitMap(self, theWidth: int, theHeight: int, theTexture: TColStd_HArray1OfByte) -> None: ...
	def SetScale(self, theScale: Standard_ShortReal) -> None: ...
	def SetScale(self, theScale: float) -> None: ...
	def SetType(self, theType: Aspect_TypeOfMarker) -> None: ...
	def Type(self) -> Aspect_TypeOfMarker: ...

class Graphic3d_AspectText3d(Graphic3d_Aspects):
	@overload
	def __init__(self) -> None: ...
	@overload
	def __init__(self, theColor: Quantity_Color, theFont: str, theExpansionFactor: float, theSpace: float, theStyle: Optional[Aspect_TypeOfStyleText], theDisplayType: Optional[Aspect_TypeOfDisplayText]) -> None: ...
	def Color(self) -> Quantity_Color: ...
	def ColorRGBA(self) -> Quantity_ColorRGBA: ...
	def DisplayType(self) -> Aspect_TypeOfDisplayText: ...
	def Font(self) -> TCollection_AsciiString: ...
	def GetTextAngle(self) -> Standard_ShortReal: ...
	def GetTextFontAspect(self) -> False: ...
	def GetTextZoomable(self) -> False: ...
	def SetColor(self, theColor: Quantity_Color) -> None: ...
	def SetColor(self, theColor: Quantity_ColorRGBA) -> None: ...
	def SetDisplayType(self, theDisplayType: Aspect_TypeOfDisplayText) -> None: ...
	def SetFont(self, theFont: TCollection_AsciiString) -> None: ...
	def SetFont(self, theFont: str) -> None: ...
	def SetStyle(self, theStyle: Aspect_TypeOfStyleText) -> None: ...
	def SetTextAngle(self, theAngle: float) -> None: ...
	def Style(self) -> Aspect_TypeOfStyleText: ...

class Graphic3d_AttribBuffer(Graphic3d_Buffer):
	def __init__(self, theAlloc: NCollection_BaseAllocator) -> None: ...
	def Init(self, theNbElems: int, theAttribs: Graphic3d_Attribute, theNbAttribs: int) -> False: ...
	def Init(self, theNbElems: int, theAttribs: Graphic3d_Array1OfAttribute) -> False: ...
	def Invalidate(self) -> None: ...
	def Invalidate(self, theAttributeIndex: int) -> None: ...
	def Invalidate(self, theAttributeIndex: int, theVertexLower: int, theVertexUpper: int) -> None: ...
	def Invalidate(self, theVertexLower: int, theVertexUpper: int) -> None: ...
	def InvalidatedRange(self) -> Graphic3d_BufferRange: ...
	def IsInterleaved(self) -> bool: ...
	def IsMutable(self) -> bool: ...
	def SetInterleaved(self, theIsInterleaved: bool) -> None: ...
	def SetMutable(self, theMutable: bool) -> None: ...
	def Validate(self) -> None: ...
	def invalidate(self, theRange: Graphic3d_BufferRange) -> None: ...

class Graphic3d_CView(Graphic3d_DataStructureManager):
	def Activate(self) -> None: ...
	def BackfacingModel(self) -> Graphic3d_TypeOfBackfacingModel: ...
	def Background(self) -> Aspect_Background: ...
	def BackgroundCubeMap(self) -> Graphic3d_CubeMap: ...
	def BackgroundImage(self) -> TCollection_AsciiString: ...
	def BackgroundImageStyle(self) -> Aspect_FillMethod: ...
	def BufferDump(self, theImage: Image_PixMap, theBufferType: Graphic3d_BufferType) -> bool: ...
	def Camera(self) -> Graphic3d_Camera: ...
	def ChangeHiddenObjects(self) -> Graphic3d_NMapOfTransient: ...
	def ChangeRenderingParams(self) -> Graphic3d_RenderingParams: ...
	def ClipPlanes(self) -> Graphic3d_SequenceOfHClipPlane: ...
	def Compute(self) -> None: ...
	def ComputedMode(self) -> bool: ...
	def ConsiderZoomPersistenceObjects(self) -> float: ...
	def ContainsFacet(self) -> bool: ...
	def ContainsFacet(self, theSet: Graphic3d_MapOfStructure) -> bool: ...
	def CopySettings(self, theOther: Graphic3d_CView) -> None: ...
	def Deactivate(self) -> None: ...
	def DiagnosticInformation(self, theDict: TColStd_IndexedDataMapOfStringString, theFlags: Graphic3d_DiagnosticInfo) -> None: ...
	def DisplayedStructures(self, theStructures: Graphic3d_MapOfStructure) -> None: ...
	def FBO(self) -> Standard_Transient: ...
	def FBOChangeViewport(self, theFbo: Standard_Transient, theWidth: int, theHeight: int) -> None: ...
	def FBOCreate(self, theWidth: int, theHeight: int) -> Standard_Transient: ...
	def FBOGetDimensions(self, theFbo: Standard_Transient) -> Tuple[int, int, int, int]: ...
	def FBORelease(self, theFbo: Standard_Transient) -> None: ...
	def GetGraduatedTrihedron(self) -> Graphic3d_GraduatedTrihedron: ...
	def GradientBackground(self) -> Aspect_GradientBackground: ...
	def GraduatedTrihedronDisplay(self, theTrihedronData: Graphic3d_GraduatedTrihedron) -> None: ...
	def GraduatedTrihedronErase(self) -> None: ...
	def GraduatedTrihedronMinMaxValues(self, theMin: Graphic3d_Vec3, theMax: Graphic3d_Vec3) -> None: ...
	def HiddenObjects(self) -> Graphic3d_NMapOfTransient: ...
	def Identification(self) -> int: ...
	def Invalidate(self) -> None: ...
	def IsActive(self) -> bool: ...
	def IsComputed(self, theStructId: int, theComputedStruct: Graphic3d_Structure) -> bool: ...
	def IsDefined(self) -> bool: ...
	def IsInvalidated(self) -> bool: ...
	def IsRemoved(self) -> bool: ...
	def Layers(self) -> False: ...
	def Lights(self) -> Graphic3d_LightSet: ...
	def MinMaxValues(self, theToIncludeAuxiliary: Optional[bool]) -> Bnd_Box: ...
	def MinMaxValues(self, theSet: Graphic3d_MapOfStructure, theToIncludeAuxiliary: Optional[bool]) -> Bnd_Box: ...
	def NumberOfDisplayedStructures(self) -> int: ...
	def ReCompute(self, theStructure: Graphic3d_Structure) -> None: ...
	def Redraw(self) -> None: ...
	def RedrawImmediate(self) -> None: ...
	def Remove(self) -> None: ...
	def RenderingParams(self) -> Graphic3d_RenderingParams: ...
	def Resized(self) -> None: ...
	def SetBackfacingModel(self, theModel: Graphic3d_TypeOfBackfacingModel) -> None: ...
	def SetBackground(self, theBackground: Aspect_Background) -> None: ...
	def SetBackgroundCubeMap(self, theCubeMap: Graphic3d_CubeMap) -> None: ...
	def SetBackgroundImage(self, theFilePath: TCollection_AsciiString) -> None: ...
	def SetBackgroundImageStyle(self, theFillStyle: Aspect_FillMethod) -> None: ...
	def SetCamera(self, theCamera: Graphic3d_Camera) -> None: ...
	def SetClipPlanes(self, thePlanes: Graphic3d_SequenceOfHClipPlane) -> None: ...
	def SetComputedMode(self, theMode: bool) -> None: ...
	def SetFBO(self, theFbo: Standard_Transient) -> None: ...
	def SetGradientBackground(self, theBackground: Aspect_GradientBackground) -> None: ...
	def SetImmediateModeDrawToFront(self, theDrawToFrontBuffer: bool) -> bool: ...
	def SetLights(self, theLights: Graphic3d_LightSet) -> None: ...
	def SetShadingModel(self, theModel: Graphic3d_TypeOfShadingModel) -> None: ...
	def SetTextureEnv(self, theTextureEnv: Graphic3d_TextureEnv) -> None: ...
	def SetVisualizationType(self, theType: Graphic3d_TypeOfVisualization) -> None: ...
	def SetWindow(self, theWindow: Aspect_Window, theContext: Optional[Aspect_RenderingContext]) -> None: ...
	def ShadingModel(self) -> Graphic3d_TypeOfShadingModel: ...
	def StatisticInformation(self) -> TCollection_AsciiString: ...
	def StatisticInformation(self, theDict: TColStd_IndexedDataMapOfStringString) -> None: ...
	def StructureManager(self) -> Graphic3d_StructureManager: ...
	def TextureEnv(self) -> Graphic3d_TextureEnv: ...
	def VisualizationType(self) -> Graphic3d_TypeOfVisualization: ...
	def Window(self) -> Aspect_Window: ...
	def ZLayerMax(self) -> int: ...

class Graphic3d_FrameStatsDataTmp(Graphic3d_FrameStatsData):
	def __init__(self) -> None: ...
	def ChangeCounterValue(self, theIndex: Graphic3d_FrameStatsCounter) -> int: ...
	def GetChangeFrameRate(self) -> float: ...
	def SetChangeFrameRate(self, value: float) -> None: ...
	def GetChangeFrameRateCpu(self) -> float: ...
	def SetChangeFrameRateCpu(self, value: float) -> None: ...
	def ChangeTimer(self, theTimer: Graphic3d_FrameStatsTimer) -> OSD_Timer: ...
	def GetChangeTimerValue(self, theIndex: Graphic3d_FrameStatsTimer) -> float: ...
	def SetChangeTimerValue(self, theIndex: Graphic3d_FrameStatsTimer, value: float) -> None: ...
	def Reset(self) -> None: ...

class Graphic3d_MediaTextureSet(Graphic3d_TextureSet, Media_IFrameQueue):
	def __init__(self) -> None: ...
	def Duration(self) -> False: ...
	def FrameSize(self) -> Graphic3d_Vec2i: ...
	def Input(self) -> TCollection_AsciiString: ...
	def IsFullRangeYUV(self) -> bool: ...
	def IsPlanarYUV(self) -> bool: ...
	def Notify(self) -> None: ...
	def OpenInput(self, thePath: TCollection_AsciiString, theToWait: bool) -> None: ...
	def PlayerContext(self) -> Media_PlayerContext: ...
	def Progress(self) -> False: ...
	def ShaderProgram(self) -> Graphic3d_ShaderProgram: ...
	def SwapFrames(self) -> bool: ...

class Graphic3d_TextureEnv(Graphic3d_TextureRoot):
	@overload
	def __init__(self, theFileName: TCollection_AsciiString) -> None: ...
	@overload
	def __init__(self, theName: Graphic3d_NameOfTextureEnv) -> None: ...
	@overload
	def __init__(self, thePixMap: Image_PixMap) -> None: ...
	def Name(self) -> Graphic3d_NameOfTextureEnv: ...
	@staticmethod
	def NumberOfTextures(self) -> int: ...
	@staticmethod
	def TextureName(self, theRank: int) -> TCollection_AsciiString: ...

class Graphic3d_TextureMap(Graphic3d_TextureRoot):
	def AnisoFilter(self) -> Graphic3d_LevelOfTextureAnisotropy: ...
	def DisableModulate(self) -> None: ...
	def DisableRepeat(self) -> None: ...
	def DisableSmooth(self) -> None: ...
	def EnableModulate(self) -> None: ...
	def EnableRepeat(self) -> None: ...
	def EnableSmooth(self) -> None: ...
	def IsModulate(self) -> bool: ...
	def IsRepeat(self) -> bool: ...
	def IsSmoothed(self) -> bool: ...
	def SetAnisoFilter(self, theLevel: Graphic3d_LevelOfTextureAnisotropy) -> None: ...

class Graphic3d_CubeMap(Graphic3d_TextureMap):
	def CurrentSide(self) -> Graphic3d_CubeMapSide: ...
	def IsTopDown(self) -> bool: ...
	def More(self) -> bool: ...
	def Next(self) -> None: ...
	def Reset(self) -> Graphic3d_CubeMap: ...
	def SetZInversion(self, theZIsInverted: bool) -> None: ...
	def Value(self) -> Image_PixMap: ...
	def ZIsInverted(self) -> bool: ...

class Graphic3d_MutableIndexBuffer(Graphic3d_IndexBuffer):
	def __init__(self, theAlloc: NCollection_BaseAllocator) -> None: ...
	def Invalidate(self) -> None: ...
	def Invalidate(self, theIndexLower: int, theIndexUpper: int) -> None: ...
	def InvalidatedRange(self) -> Graphic3d_BufferRange: ...
	def IsMutable(self) -> bool: ...
	def Validate(self) -> None: ...
	def invalidate(self, theRange: Graphic3d_BufferRange) -> None: ...

class Graphic3d_Texture1D(Graphic3d_TextureMap):
	def Name(self) -> Graphic3d_NameOfTexture1D: ...
	@staticmethod
	def NumberOfTextures(self) -> int: ...
	@staticmethod
	def TextureName(self, aRank: int) -> TCollection_AsciiString: ...

class Graphic3d_Texture2D(Graphic3d_TextureMap):
	def HasMipMaps(self) -> bool: ...
	def Name(self) -> Graphic3d_NameOfTexture2D: ...
	@staticmethod
	def NumberOfTextures(self) -> int: ...
	def SetImage(self, thePixMap: Image_PixMap) -> None: ...
	def SetMipMaps(self, theToUse: bool) -> None: ...
	@staticmethod
	def TextureName(self, theRank: int) -> TCollection_AsciiString: ...

class Graphic3d_CubeMapSeparate(Graphic3d_CubeMap):
	def GetImage(self) -> Image_PixMap: ...
	def IsDone(self) -> bool: ...
	def Value(self) -> Image_PixMap: ...

class Graphic3d_MediaTexture(Graphic3d_Texture2D):
	def __init__(self, theMutex: Media_HMutex, thePlane: Optional[int]) -> None: ...
	def Frame(self) -> Media_Frame: ...
	def GenerateNewId(self) -> None: ...
	def GetImage(self) -> Image_PixMap: ...
	def SetFrame(self, theFrame: Media_Frame) -> None: ...

class Graphic3d_Texture1Dmanual(Graphic3d_Texture1D):
	@overload
	def __init__(self, theFileName: TCollection_AsciiString) -> None: ...
	@overload
	def __init__(self, theNOT: Graphic3d_NameOfTexture1D) -> None: ...
	@overload
	def __init__(self, thePixMap: Image_PixMap) -> None: ...

class Graphic3d_Texture1Dsegment(Graphic3d_Texture1D):
	@overload
	def __init__(self, theFileName: TCollection_AsciiString) -> None: ...
	@overload
	def __init__(self, theNOT: Graphic3d_NameOfTexture1D) -> None: ...
	@overload
	def __init__(self, thePixMap: Image_PixMap) -> None: ...
	def Segment(self, theX1: Standard_ShortReal, theY1: Standard_ShortReal, theZ1: Standard_ShortReal, theX2: Standard_ShortReal, theY2: Standard_ShortReal, theZ2: Standard_ShortReal) -> None: ...
	def SetSegment(self, theX1: Standard_ShortReal, theY1: Standard_ShortReal, theZ1: Standard_ShortReal, theX2: Standard_ShortReal, theY2: Standard_ShortReal, theZ2: Standard_ShortReal) -> None: ...

class Graphic3d_Texture2Dmanual(Graphic3d_Texture2D):
	@overload
	def __init__(self, theFileName: TCollection_AsciiString) -> None: ...
	@overload
	def __init__(self, theNOT: Graphic3d_NameOfTexture2D) -> None: ...
	@overload
	def __init__(self, thePixMap: Image_PixMap) -> None: ...

class Graphic3d_Texture2Dplane(Graphic3d_Texture2D):
	@overload
	def __init__(self, theFileName: TCollection_AsciiString) -> None: ...
	@overload
	def __init__(self, theNOT: Graphic3d_NameOfTexture2D) -> None: ...
	@overload
	def __init__(self, thePixMap: Image_PixMap) -> None: ...
	def Plane(self) -> Graphic3d_NameOfTexturePlane: ...
	def PlaneS(self, A: Standard_ShortReal, B: Standard_ShortReal, C: Standard_ShortReal, D: Standard_ShortReal) -> None: ...
	def PlaneT(self, A: Standard_ShortReal, B: Standard_ShortReal, C: Standard_ShortReal, D: Standard_ShortReal) -> None: ...
	def Rotation(self, theVal: Standard_ShortReal) -> None: ...
	def ScaleS(self, theVal: Standard_ShortReal) -> None: ...
	def ScaleT(self, theVal: Standard_ShortReal) -> None: ...
	def SetPlane(self, thePlane: Graphic3d_NameOfTexturePlane) -> None: ...
	def SetPlaneS(self, A: Standard_ShortReal, B: Standard_ShortReal, C: Standard_ShortReal, D: Standard_ShortReal) -> None: ...
	def SetPlaneT(self, A: Standard_ShortReal, B: Standard_ShortReal, C: Standard_ShortReal, D: Standard_ShortReal) -> None: ...
	def SetRotation(self, theVal: Standard_ShortReal) -> None: ...
	def SetScaleS(self, theVal: Standard_ShortReal) -> None: ...
	def SetScaleT(self, theVal: Standard_ShortReal) -> None: ...
	def SetTranslateS(self, theVal: Standard_ShortReal) -> None: ...
	def SetTranslateT(self, theVal: Standard_ShortReal) -> None: ...
	def TranslateS(self, theVal: Standard_ShortReal) -> None: ...
	def TranslateT(self, theVal: Standard_ShortReal) -> None: ...

#classnotwrapped
class Graphic3d_UniformValue:
	pass

#classnotwrapped
class Graphic3d_UniformValueType:
	pass

#classnotwrapped
class Graphic3d_UniformValueTypeID:
	pass

#classnotwrapped
class Graphic3d_Buffer:
	pass

#classnotwrapped
class Graphic3d_IndexBuffer:
	pass

#classnotwrapped
class Graphic3d_TransformPers:
	pass

#classnotwrapped
class Graphic3d_TextureSet:
	pass

#classnotwrapped
class Graphic3d_CubeMapOrder:
	pass

#classnotwrapped
class Graphic3d_CubeMapPacked:
	pass

#classnotwrapped
class Graphic3d_BvhCStructureSetTrsfPers:
	pass
