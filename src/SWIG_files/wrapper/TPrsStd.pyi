from enum import IntEnum
from typing import overload, NewType, Optional, Tuple

from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.TDataXtd import *
from OCC.Core.AIS import *
from OCC.Core.TCollection import *
from OCC.Core.TDF import *


class TPrsStd_ConstraintTools:
	@staticmethod
	def ComputeAngle(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeAngleForOneFace(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeCoincident(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeConcentric(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeDiameter(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeDistance(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeEqualDistance(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeEqualRadius(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeFix(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeMaxRadius(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeMidPoint(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeMinRadius(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeOffset(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeOthers(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeParallel(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputePerpendicular(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputePlacement(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeRadius(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeRound(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeSymmetry(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeTangent(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...
	@staticmethod
	def ComputeTextAndValue(self, aConst: TDataXtd_Constraint, aText: TCollection_ExtendedString, anIsAngle: bool) -> float: ...
	@staticmethod
	def UpdateOnlyValue(self, aConst: TDataXtd_Constraint, anAIS: AIS_InteractiveObject) -> None: ...

class TPrsStd_Driver(Standard_Transient):
	def Update(self, L: TDF_Label, ais: AIS_InteractiveObject) -> bool: ...

class TPrsStd_DriverTable(Standard_Transient):
	def __init__(self) -> None: ...
	def AddDriver(self, guid: Standard_GUID, driver: TPrsStd_Driver) -> bool: ...
	def Clear(self) -> None: ...
	def FindDriver(self, guid: Standard_GUID, driver: TPrsStd_Driver) -> bool: ...
	@staticmethod
	def Get(self) -> TPrsStd_DriverTable: ...
	def InitStandardDrivers(self) -> None: ...
	def RemoveDriver(self, guid: Standard_GUID) -> bool: ...

class TPrsStd_AxisDriver(TPrsStd_Driver):
	def __init__(self) -> None: ...
	def Update(self, aLabel: TDF_Label, anAISObject: AIS_InteractiveObject) -> bool: ...

class TPrsStd_ConstraintDriver(TPrsStd_Driver):
	def __init__(self) -> None: ...
	def Update(self, aLabel: TDF_Label, anAISObject: AIS_InteractiveObject) -> bool: ...

class TPrsStd_GeometryDriver(TPrsStd_Driver):
	def __init__(self) -> None: ...
	def Update(self, aLabel: TDF_Label, anAISObject: AIS_InteractiveObject) -> bool: ...

class TPrsStd_NamedShapeDriver(TPrsStd_Driver):
	def __init__(self) -> None: ...
	def Update(self, aLabel: TDF_Label, anAISObject: AIS_InteractiveObject) -> bool: ...

class TPrsStd_PlaneDriver(TPrsStd_Driver):
	def __init__(self) -> None: ...
	def Update(self, aLabel: TDF_Label, anAISObject: AIS_InteractiveObject) -> bool: ...

class TPrsStd_PointDriver(TPrsStd_Driver):
	def __init__(self) -> None: ...
	def Update(self, aLabel: TDF_Label, anAISObject: AIS_InteractiveObject) -> bool: ...
